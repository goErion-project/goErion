<?php
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::get(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::make(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::makeWith(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\app(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\resolve(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
        '' => '@',
            'App\Marketplace\Payment\Coin' => \App\Marketplace\Payment\BitcoinPayment::class,
            'FinalizeEarlyModule\main\Info' => \Modules\FinalizeEarly\Main\Info::class,
            'FinalizeEarlyModule\main\Procedure' => \Modules\FinalizeEarly\Main\Procedure::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Modules\FeaturedProducts\main\FeaturedStatus' => \Modules\FeaturedProducts\Main\FeaturedStatus::class,
            'Nwidart\Modules\Contracts\ActivatorInterface' => \Nwidart\Modules\Activators\FileActivator::class,
            'Nwidart\Modules\Contracts\RepositoryInterface' => \Nwidart\Modules\Laravel\LaravelFileRepository::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'markdown.compiler' => \GrahamCampbell\Markdown\View\Compiler\CommonMarkCompiler::class,
            'markdown.converter' => \League\CommonMark\MarkdownConverter::class,
            'markdown.directive' => \GrahamCampbell\Markdown\View\Directive\CommonMarkDirective::class,
            'markdown.environment' => \League\CommonMark\Environment\Environment::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\SyncQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PhpRedisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));

    override(\auth()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Contracts\Auth\Guard::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Auth::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\request()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Http\Request::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => \App\Models\User::class,
    ]));

    override(\config(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.config' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Redis' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Uuid' => 'string',
            'app.aliases.Module' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.password' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'auth.forgotpassword.users.provider' => 'string',
            'auth.forgotpassword.users.table' => 'string',
            'auth.forgotpassword.users.expire' => 'integer',
            'auth.forgotpassword.users.throttle' => 'integer',
            'bitmessage.enabled' => 'boolean',
            'bitmessage.connection.host' => 'string',
            'bitmessage.connection.port' => 'integer',
            'bitmessage.connection.username' => 'string',
            'bitmessage.connection.password' => 'string',
            'bitmessage.marketplace_address' => 'string',
            'bitmessage.confirmation_valid_time' => 'integer',
            'bitmessage.confirmation_msg_frequency' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.Database.driver' => 'string',
            'cache.stores.Database.connection' => 'NULL',
            'cache.stores.Database.table' => 'string',
            'cache.stores.Database.lock_connection' => 'NULL',
            'cache.stores.Database.lock_table' => 'NULL',
            'cache.prefix' => 'string',
            'coins.coin_list.stb' => 'string',
            'coins.bitcoin.host' => 'string',
            'coins.bitcoin.username' => 'string',
            'coins.bitcoin.password' => 'string',
            'coins.bitcoin.port' => 'integer',
            'coins.bitcoin.minconfirmations' => 'integer',
            'coins.monero.host' => 'string',
            'coins.monero.port' => 'integer',
            'coins.monero.username' => 'string',
            'coins.monero.password' => 'string',
            'coins.pivx.host' => 'string',
            'coins.pivx.port' => 'integer',
            'coins.pivx.username' => 'string',
            'coins.pivx.password' => 'string',
            'coins.litecoin.host' => 'string',
            'coins.litecoin.port' => 'integer',
            'coins.litecoin.username' => 'string',
            'coins.litecoin.password' => 'string',
            'coins.dash.host' => 'string',
            'coins.dash.port' => 'integer',
            'coins.dash.username' => 'string',
            'coins.dash.password' => 'string',
            'coins.bictoin_cash.host' => 'string',
            'coins.bictoin_cash.port' => 'integer',
            'coins.bictoin_cash.username' => 'string',
            'coins.bictoin_cash.password' => 'string',
            'coins.xvg.host' => 'string',
            'coins.xvg.port' => 'integer',
            'coins.xvg.username' => 'string',
            'coins.xvg.password' => 'string',
            'coins.caching_price_interval' => 'integer',
            'coins.market_addresses.btc' => 'array',
            'coins.market_addresses.pivx' => 'array',
            'coins.market_addresses.dash' => 'array',
            'coins.market_addresses.xmr' => 'array',
            'coins.market_addresses.stb' => 'array',
            'coins.multisig.balance_api' => 'string',
            'coins.multisig.unspent_api' => 'string',
            'countries.AFG' => 'string',
            'countries.ALA' => 'string',
            'countries.ALB' => 'string',
            'countries.DZA' => 'string',
            'countries.ASM' => 'string',
            'countries.AND' => 'string',
            'countries.AGO' => 'string',
            'countries.AIA' => 'string',
            'countries.ATA' => 'string',
            'countries.ATG' => 'string',
            'countries.ARG' => 'string',
            'countries.ARM' => 'string',
            'countries.ABW' => 'string',
            'countries.AUS' => 'string',
            'countries.AUT' => 'string',
            'countries.AZE' => 'string',
            'countries.BHS' => 'string',
            'countries.BHR' => 'string',
            'countries.BGD' => 'string',
            'countries.BRB' => 'string',
            'countries.BLR' => 'string',
            'countries.BEL' => 'string',
            'countries.BLZ' => 'string',
            'countries.BEN' => 'string',
            'countries.BMU' => 'string',
            'countries.BTN' => 'string',
            'countries.BOL' => 'string',
            'countries.BES' => 'string',
            'countries.BIH' => 'string',
            'countries.BWA' => 'string',
            'countries.BVT' => 'string',
            'countries.BRA' => 'string',
            'countries.IOT' => 'string',
            'countries.BRN' => 'string',
            'countries.BGR' => 'string',
            'countries.BFA' => 'string',
            'countries.BDI' => 'string',
            'countries.KHM' => 'string',
            'countries.CMR' => 'string',
            'countries.CAN' => 'string',
            'countries.CPV' => 'string',
            'countries.CYM' => 'string',
            'countries.CAF' => 'string',
            'countries.TCD' => 'string',
            'countries.CHL' => 'string',
            'countries.CHN' => 'string',
            'countries.CXR' => 'string',
            'countries.CCK' => 'string',
            'countries.COL' => 'string',
            'countries.COM' => 'string',
            'countries.COG' => 'string',
            'countries.COD' => 'string',
            'countries.COK' => 'string',
            'countries.CRI' => 'string',
            'countries.CIV' => 'string',
            'countries.HRV' => 'string',
            'countries.CUB' => 'string',
            'countries.CUW' => 'string',
            'countries.CYP' => 'string',
            'countries.CZE' => 'string',
            'countries.DNK' => 'string',
            'countries.DJI' => 'string',
            'countries.DMA' => 'string',
            'countries.DOM' => 'string',
            'countries.ECU' => 'string',
            'countries.EGY' => 'string',
            'countries.SLV' => 'string',
            'countries.GNQ' => 'string',
            'countries.ERI' => 'string',
            'countries.EST' => 'string',
            'countries.ETH' => 'string',
            'countries.FLK' => 'string',
            'countries.FRO' => 'string',
            'countries.FJI' => 'string',
            'countries.FIN' => 'string',
            'countries.FRA' => 'string',
            'countries.GUF' => 'string',
            'countries.PYF' => 'string',
            'countries.ATF' => 'string',
            'countries.GAB' => 'string',
            'countries.GMB' => 'string',
            'countries.GEO' => 'string',
            'countries.DEU' => 'string',
            'countries.GHA' => 'string',
            'countries.GIB' => 'string',
            'countries.GRC' => 'string',
            'countries.GRL' => 'string',
            'countries.GRD' => 'string',
            'countries.GLP' => 'string',
            'countries.GUM' => 'string',
            'countries.GTM' => 'string',
            'countries.GGY' => 'string',
            'countries.GIN' => 'string',
            'countries.GNB' => 'string',
            'countries.GUY' => 'string',
            'countries.HTI' => 'string',
            'countries.HMD' => 'string',
            'countries.VAT' => 'string',
            'countries.HND' => 'string',
            'countries.HKG' => 'string',
            'countries.HUN' => 'string',
            'countries.ISL' => 'string',
            'countries.IND' => 'string',
            'countries.IDN' => 'string',
            'countries.IRN' => 'string',
            'countries.IRQ' => 'string',
            'countries.IRL' => 'string',
            'countries.IMN' => 'string',
            'countries.ISR' => 'string',
            'countries.ITA' => 'string',
            'countries.JAM' => 'string',
            'countries.JPN' => 'string',
            'countries.JEY' => 'string',
            'countries.JOR' => 'string',
            'countries.KAZ' => 'string',
            'countries.KEN' => 'string',
            'countries.KIR' => 'string',
            'countries.PRK' => 'string',
            'countries.KOR' => 'string',
            'countries.KWT' => 'string',
            'countries.KGZ' => 'string',
            'countries.LAO' => 'string',
            'countries.LVA' => 'string',
            'countries.LBN' => 'string',
            'countries.LSO' => 'string',
            'countries.LBR' => 'string',
            'countries.LBY' => 'string',
            'countries.LIE' => 'string',
            'countries.LTU' => 'string',
            'countries.LUX' => 'string',
            'countries.MAC' => 'string',
            'countries.MKD' => 'string',
            'countries.MDG' => 'string',
            'countries.MWI' => 'string',
            'countries.MYS' => 'string',
            'countries.MDV' => 'string',
            'countries.MLI' => 'string',
            'countries.MLT' => 'string',
            'countries.MHL' => 'string',
            'countries.MTQ' => 'string',
            'countries.MRT' => 'string',
            'countries.MUS' => 'string',
            'countries.MYT' => 'string',
            'countries.MEX' => 'string',
            'countries.FSM' => 'string',
            'countries.MDA' => 'string',
            'countries.MCO' => 'string',
            'countries.MNG' => 'string',
            'countries.MNE' => 'string',
            'countries.MSR' => 'string',
            'countries.MAR' => 'string',
            'countries.MOZ' => 'string',
            'countries.MMR' => 'string',
            'countries.NAM' => 'string',
            'countries.NRU' => 'string',
            'countries.NPL' => 'string',
            'countries.NLD' => 'string',
            'countries.NCL' => 'string',
            'countries.NZL' => 'string',
            'countries.NIC' => 'string',
            'countries.NER' => 'string',
            'countries.NGA' => 'string',
            'countries.NIU' => 'string',
            'countries.NFK' => 'string',
            'countries.MNP' => 'string',
            'countries.NOR' => 'string',
            'countries.OMN' => 'string',
            'countries.PAK' => 'string',
            'countries.PLW' => 'string',
            'countries.PSE' => 'string',
            'countries.PAN' => 'string',
            'countries.PNG' => 'string',
            'countries.PRY' => 'string',
            'countries.PER' => 'string',
            'countries.PHL' => 'string',
            'countries.PCN' => 'string',
            'countries.POL' => 'string',
            'countries.PRT' => 'string',
            'countries.PRI' => 'string',
            'countries.QAT' => 'string',
            'countries.REU' => 'string',
            'countries.ROU' => 'string',
            'countries.RUS' => 'string',
            'countries.RWA' => 'string',
            'countries.BLM' => 'string',
            'countries.SHN' => 'string',
            'countries.KNA' => 'string',
            'countries.LCA' => 'string',
            'countries.MAF' => 'string',
            'countries.SPM' => 'string',
            'countries.VCT' => 'string',
            'countries.WSM' => 'string',
            'countries.SMR' => 'string',
            'countries.STP' => 'string',
            'countries.SAU' => 'string',
            'countries.SEN' => 'string',
            'countries.SRB' => 'string',
            'countries.SYC' => 'string',
            'countries.SLE' => 'string',
            'countries.SGP' => 'string',
            'countries.SXM' => 'string',
            'countries.SVK' => 'string',
            'countries.SVN' => 'string',
            'countries.SLB' => 'string',
            'countries.SOM' => 'string',
            'countries.ZAF' => 'string',
            'countries.SGS' => 'string',
            'countries.SSD' => 'string',
            'countries.ESP' => 'string',
            'countries.LKA' => 'string',
            'countries.SDN' => 'string',
            'countries.SUR' => 'string',
            'countries.SJM' => 'string',
            'countries.SWZ' => 'string',
            'countries.SWE' => 'string',
            'countries.CHE' => 'string',
            'countries.SYR' => 'string',
            'countries.TWN' => 'string',
            'countries.TJK' => 'string',
            'countries.TZA' => 'string',
            'countries.THA' => 'string',
            'countries.TLS' => 'string',
            'countries.TGO' => 'string',
            'countries.TKL' => 'string',
            'countries.TON' => 'string',
            'countries.TTO' => 'string',
            'countries.TUN' => 'string',
            'countries.TUR' => 'string',
            'countries.TKM' => 'string',
            'countries.TCA' => 'string',
            'countries.TUV' => 'string',
            'countries.UGA' => 'string',
            'countries.UKR' => 'string',
            'countries.ARE' => 'string',
            'countries.GBR' => 'string',
            'countries.USA' => 'string',
            'countries.UMI' => 'string',
            'countries.URY' => 'string',
            'countries.UZB' => 'string',
            'countries.VUT' => 'string',
            'countries.VEN' => 'string',
            'countries.VNM' => 'string',
            'countries.VGB' => 'string',
            'countries.VIR' => 'string',
            'countries.WLF' => 'string',
            'countries.ESH' => 'string',
            'countries.YEM' => 'string',
            'countries.ZMB' => 'string',
            'countries.ZWE' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'elasticsearch.host' => 'string',
            'elasticsearch.user' => 'NULL',
            'elasticsearch.password' => 'NULL',
            'elasticsearch.cloud_id' => 'NULL',
            'elasticsearch.api_key' => 'NULL',
            'elasticsearch.ssl_verification' => 'boolean',
            'elasticsearch.queue.timeout' => 'NULL',
            'elasticsearch.indices.mappings.default.properties.id.type' => 'string',
            'elasticsearch.indices.settings.default.number_of_shards' => 'integer',
            'elasticsearch.indices.settings.default.number_of_replicas' => 'integer',
            'experience.multipliers.product_delivered' => 'integer',
            'experience.multipliers.product_dispute_lost' => 'integer',
            'experience.multipliers.feedback_per_star' => 'integer',
            'experience.multipliers.feedback_per_usd' => 'integer',
            'featuredproducts.name' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links./home/erion/goErion/public/storage' => 'string',
            'finalizeearly.name' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.deprecations.driver' => 'string',
            'logging.channels.deprecations.handler' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'markdown.views' => 'boolean',
            'markdown.extensions' => 'array',
            'markdown.renderer.block_separator' => 'string',
            'markdown.renderer.inner_separator' => 'string',
            'markdown.renderer.soft_break' => 'string',
            'markdown.commonmark.enable_em' => 'boolean',
            'markdown.commonmark.enable_strong' => 'boolean',
            'markdown.commonmark.use_asterisk' => 'boolean',
            'markdown.commonmark.use_underscore' => 'boolean',
            'markdown.commonmark.unordered_list_markers' => 'array',
            'markdown.html_input' => 'string',
            'markdown.allow_unsafe_links' => 'boolean',
            'markdown.max_nesting_level' => 'integer',
            'markdown.slug_normalizer.max_length' => 'integer',
            'markdown.slug_normalizer.unique' => 'string',
            'marketplace.rsa_key_length' => 'integer',
            'marketplace.mnemonic_length' => 'integer',
            'marketplace.product_types' => 'array',
            'marketplace.market_fee_percent' => 'integer',
            'marketplace.vendor_fee' => 'integer',
            'marketplace.vendor_dwc_tag_count' => 'integer',
            'marketplace.vendor_low_value_feedback' => 'integer',
            'marketplace.trusted_vendor.min_lvl' => 'integer',
            'marketplace.trusted_vendor.min_feedbacks' => 'integer',
            'marketplace.trusted_vendor.percentage_of_feedback_positive' => 'integer',
            'marketplace.products_per_page' => 'integer',
            'marketplace.days_complete' => 'integer',
            'marketplace.days_old_messages' => 'integer',
            'marketplace.days_old_purchases' => 'integer',
            'marketplace.seeder_coins' => 'array',
            'marketplace.js_warning' => 'boolean',
            'marketplace.mirrors' => 'array',
            'marketplace.front_page_cache.top_vendors' => 'integer',
            'marketplace.front_page_cache.latest_orders' => 'integer',
            'marketplace.front_page_cache.rising_vendors' => 'integer',
            'marketplace.front_page_cache.featured_products' => 'integer',
            'modules.namespace' => 'string',
            'modules.stubs.enabled' => 'boolean',
            'modules.stubs.path' => 'string',
            'modules.stubs.files.Routes/web' => 'string',
            'modules.stubs.files.Routes/api' => 'string',
            'modules.stubs.files.views/index' => 'string',
            'modules.stubs.files.views/master' => 'string',
            'modules.stubs.files.scaffold/config' => 'string',
            'modules.stubs.files.composer' => 'string',
            'modules.stubs.files.assets/js/app' => 'string',
            'modules.stubs.files.assets/sass/app' => 'string',
            'modules.stubs.files.vite' => 'string',
            'modules.stubs.files.package' => 'string',
            'modules.stubs.replacements.Routes/web' => 'array',
            'modules.stubs.replacements.Routes/api' => 'array',
            'modules.stubs.replacements.vite' => 'array',
            'modules.stubs.replacements.json' => 'array',
            'modules.stubs.replacements.views/index' => 'array',
            'modules.stubs.replacements.views/master' => 'array',
            'modules.stubs.replacements.scaffold/config' => 'array',
            'modules.stubs.replacements.composer' => 'array',
            'modules.stubs.gitkeep' => 'boolean',
            'modules.paths.modules' => 'string',
            'modules.paths.assets' => 'string',
            'modules.paths.migration' => 'string',
            'modules.paths.app_folder' => 'string',
            'modules.paths.generator.actions.path' => 'string',
            'modules.paths.generator.actions.generate' => 'boolean',
            'modules.paths.generator.casts.path' => 'string',
            'modules.paths.generator.casts.generate' => 'boolean',
            'modules.paths.generator.channels.path' => 'string',
            'modules.paths.generator.channels.generate' => 'boolean',
            'modules.paths.generator.class.path' => 'string',
            'modules.paths.generator.class.generate' => 'boolean',
            'modules.paths.generator.command.path' => 'string',
            'modules.paths.generator.command.generate' => 'boolean',
            'modules.paths.generator.component-class.path' => 'string',
            'modules.paths.generator.component-class.generate' => 'boolean',
            'modules.paths.generator.emails.path' => 'string',
            'modules.paths.generator.emails.generate' => 'boolean',
            'modules.paths.generator.event.path' => 'string',
            'modules.paths.generator.event.generate' => 'boolean',
            'modules.paths.generator.enums.path' => 'string',
            'modules.paths.generator.enums.generate' => 'boolean',
            'modules.paths.generator.exceptions.path' => 'string',
            'modules.paths.generator.exceptions.generate' => 'boolean',
            'modules.paths.generator.jobs.path' => 'string',
            'modules.paths.generator.jobs.generate' => 'boolean',
            'modules.paths.generator.helpers.path' => 'string',
            'modules.paths.generator.helpers.generate' => 'boolean',
            'modules.paths.generator.interfaces.path' => 'string',
            'modules.paths.generator.interfaces.generate' => 'boolean',
            'modules.paths.generator.listener.path' => 'string',
            'modules.paths.generator.listener.generate' => 'boolean',
            'modules.paths.generator.model.path' => 'string',
            'modules.paths.generator.model.generate' => 'boolean',
            'modules.paths.generator.notifications.path' => 'string',
            'modules.paths.generator.notifications.generate' => 'boolean',
            'modules.paths.generator.observer.path' => 'string',
            'modules.paths.generator.observer.generate' => 'boolean',
            'modules.paths.generator.policies.path' => 'string',
            'modules.paths.generator.policies.generate' => 'boolean',
            'modules.paths.generator.provider.path' => 'string',
            'modules.paths.generator.provider.generate' => 'boolean',
            'modules.paths.generator.repository.path' => 'string',
            'modules.paths.generator.repository.generate' => 'boolean',
            'modules.paths.generator.resource.path' => 'string',
            'modules.paths.generator.resource.generate' => 'boolean',
            'modules.paths.generator.route-provider.path' => 'string',
            'modules.paths.generator.route-provider.generate' => 'boolean',
            'modules.paths.generator.rules.path' => 'string',
            'modules.paths.generator.rules.generate' => 'boolean',
            'modules.paths.generator.services.path' => 'string',
            'modules.paths.generator.services.generate' => 'boolean',
            'modules.paths.generator.scopes.path' => 'string',
            'modules.paths.generator.scopes.generate' => 'boolean',
            'modules.paths.generator.traits.path' => 'string',
            'modules.paths.generator.traits.generate' => 'boolean',
            'modules.paths.generator.controller.path' => 'string',
            'modules.paths.generator.controller.generate' => 'boolean',
            'modules.paths.generator.filter.path' => 'string',
            'modules.paths.generator.filter.generate' => 'boolean',
            'modules.paths.generator.request.path' => 'string',
            'modules.paths.generator.request.generate' => 'boolean',
            'modules.paths.generator.config.path' => 'string',
            'modules.paths.generator.config.generate' => 'boolean',
            'modules.paths.generator.factory.path' => 'string',
            'modules.paths.generator.factory.generate' => 'boolean',
            'modules.paths.generator.migration.path' => 'string',
            'modules.paths.generator.migration.generate' => 'boolean',
            'modules.paths.generator.seeder.path' => 'string',
            'modules.paths.generator.seeder.generate' => 'boolean',
            'modules.paths.generator.lang.path' => 'string',
            'modules.paths.generator.lang.generate' => 'boolean',
            'modules.paths.generator.assets.path' => 'string',
            'modules.paths.generator.assets.generate' => 'boolean',
            'modules.paths.generator.component-view.path' => 'string',
            'modules.paths.generator.component-view.generate' => 'boolean',
            'modules.paths.generator.views.path' => 'string',
            'modules.paths.generator.views.generate' => 'boolean',
            'modules.paths.generator.Routes.path' => 'string',
            'modules.paths.generator.Routes.generate' => 'boolean',
            'modules.paths.generator.test-feature.path' => 'string',
            'modules.paths.generator.test-feature.generate' => 'boolean',
            'modules.paths.generator.test-unit.path' => 'string',
            'modules.paths.generator.test-unit.generate' => 'boolean',
            'modules.auto-discover.Migrations' => 'boolean',
            'modules.auto-discover.translations' => 'boolean',
            'modules.commands' => 'array',
            'modules.scan.enabled' => 'boolean',
            'modules.scan.paths' => 'array',
            'modules.composer.vendor' => 'string',
            'modules.composer.author.name' => 'string',
            'modules.composer.author.email' => 'string',
            'modules.composer.composer-output' => 'boolean',
            'modules.register.translations' => 'boolean',
            'modules.register.files' => 'string',
            'modules.activators.file.class' => 'string',
            'modules.activators.file.statuses-file' => 'string',
            'modules.activator' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.algolia.index-settings' => 'array',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'NULL',
            'scout.meilisearch.index-settings' => 'array',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'scout.elasticsearch.index' => 'string',
            'scout.elasticsearch.hosts' => 'array',
            'scout.elasticsearch.algolia.id' => 'string',
            'scout.elasticsearch.algolia.secret' => 'string',
            'scout.elasticsearch.meilisearch.host' => 'string',
            'scout.elasticsearch.meilisearch.key' => 'NULL',
            'scout.elasticsearch.typesense.client-settings.api_key' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.host' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.port' => 'string',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'vendor.profile_bgs.weave' => 'string',
            'vendor.profile_bgs.stairs' => 'string',
            'vendor.profile_bgs.arrows' => 'string',
            'vendor.profile_bgs.zigzag' => 'string',
            'vendor.profile_bgs.carbon' => 'string',
            'vendor.profile_bgs.cross' => 'string',
            'vendor.profile_bgs.paper' => 'string',
            'vendor.profile_bgs.waves' => 'string',
            'vendor.profile_bgs.tablecloth' => 'string',
            'vendor.profile_bgs.seigaiha' => 'string',
            'vendor.profile_bgs.jcubes' => 'string',
            'vendor.profile_bgs.bricks' => 'string',
            'vendor.profile_bgs.checkerboard' => 'string',
            'vendor.profile_bgs.starrynight' => 'string',
            'vendor.profile_bgs.stars' => 'string',
            'vendor.profile_bgs.wave' => 'string',
            'vendor.profile_bgs.blueprint' => 'string',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Config\Repository::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.config' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Redis' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Uuid' => 'string',
            'app.aliases.Module' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.password' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'auth.forgotpassword.users.provider' => 'string',
            'auth.forgotpassword.users.table' => 'string',
            'auth.forgotpassword.users.expire' => 'integer',
            'auth.forgotpassword.users.throttle' => 'integer',
            'bitmessage.enabled' => 'boolean',
            'bitmessage.connection.host' => 'string',
            'bitmessage.connection.port' => 'integer',
            'bitmessage.connection.username' => 'string',
            'bitmessage.connection.password' => 'string',
            'bitmessage.marketplace_address' => 'string',
            'bitmessage.confirmation_valid_time' => 'integer',
            'bitmessage.confirmation_msg_frequency' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.Database.driver' => 'string',
            'cache.stores.Database.connection' => 'NULL',
            'cache.stores.Database.table' => 'string',
            'cache.stores.Database.lock_connection' => 'NULL',
            'cache.stores.Database.lock_table' => 'NULL',
            'cache.prefix' => 'string',
            'coins.coin_list.stb' => 'string',
            'coins.bitcoin.host' => 'string',
            'coins.bitcoin.username' => 'string',
            'coins.bitcoin.password' => 'string',
            'coins.bitcoin.port' => 'integer',
            'coins.bitcoin.minconfirmations' => 'integer',
            'coins.monero.host' => 'string',
            'coins.monero.port' => 'integer',
            'coins.monero.username' => 'string',
            'coins.monero.password' => 'string',
            'coins.pivx.host' => 'string',
            'coins.pivx.port' => 'integer',
            'coins.pivx.username' => 'string',
            'coins.pivx.password' => 'string',
            'coins.litecoin.host' => 'string',
            'coins.litecoin.port' => 'integer',
            'coins.litecoin.username' => 'string',
            'coins.litecoin.password' => 'string',
            'coins.dash.host' => 'string',
            'coins.dash.port' => 'integer',
            'coins.dash.username' => 'string',
            'coins.dash.password' => 'string',
            'coins.bictoin_cash.host' => 'string',
            'coins.bictoin_cash.port' => 'integer',
            'coins.bictoin_cash.username' => 'string',
            'coins.bictoin_cash.password' => 'string',
            'coins.xvg.host' => 'string',
            'coins.xvg.port' => 'integer',
            'coins.xvg.username' => 'string',
            'coins.xvg.password' => 'string',
            'coins.caching_price_interval' => 'integer',
            'coins.market_addresses.btc' => 'array',
            'coins.market_addresses.pivx' => 'array',
            'coins.market_addresses.dash' => 'array',
            'coins.market_addresses.xmr' => 'array',
            'coins.market_addresses.stb' => 'array',
            'coins.multisig.balance_api' => 'string',
            'coins.multisig.unspent_api' => 'string',
            'countries.AFG' => 'string',
            'countries.ALA' => 'string',
            'countries.ALB' => 'string',
            'countries.DZA' => 'string',
            'countries.ASM' => 'string',
            'countries.AND' => 'string',
            'countries.AGO' => 'string',
            'countries.AIA' => 'string',
            'countries.ATA' => 'string',
            'countries.ATG' => 'string',
            'countries.ARG' => 'string',
            'countries.ARM' => 'string',
            'countries.ABW' => 'string',
            'countries.AUS' => 'string',
            'countries.AUT' => 'string',
            'countries.AZE' => 'string',
            'countries.BHS' => 'string',
            'countries.BHR' => 'string',
            'countries.BGD' => 'string',
            'countries.BRB' => 'string',
            'countries.BLR' => 'string',
            'countries.BEL' => 'string',
            'countries.BLZ' => 'string',
            'countries.BEN' => 'string',
            'countries.BMU' => 'string',
            'countries.BTN' => 'string',
            'countries.BOL' => 'string',
            'countries.BES' => 'string',
            'countries.BIH' => 'string',
            'countries.BWA' => 'string',
            'countries.BVT' => 'string',
            'countries.BRA' => 'string',
            'countries.IOT' => 'string',
            'countries.BRN' => 'string',
            'countries.BGR' => 'string',
            'countries.BFA' => 'string',
            'countries.BDI' => 'string',
            'countries.KHM' => 'string',
            'countries.CMR' => 'string',
            'countries.CAN' => 'string',
            'countries.CPV' => 'string',
            'countries.CYM' => 'string',
            'countries.CAF' => 'string',
            'countries.TCD' => 'string',
            'countries.CHL' => 'string',
            'countries.CHN' => 'string',
            'countries.CXR' => 'string',
            'countries.CCK' => 'string',
            'countries.COL' => 'string',
            'countries.COM' => 'string',
            'countries.COG' => 'string',
            'countries.COD' => 'string',
            'countries.COK' => 'string',
            'countries.CRI' => 'string',
            'countries.CIV' => 'string',
            'countries.HRV' => 'string',
            'countries.CUB' => 'string',
            'countries.CUW' => 'string',
            'countries.CYP' => 'string',
            'countries.CZE' => 'string',
            'countries.DNK' => 'string',
            'countries.DJI' => 'string',
            'countries.DMA' => 'string',
            'countries.DOM' => 'string',
            'countries.ECU' => 'string',
            'countries.EGY' => 'string',
            'countries.SLV' => 'string',
            'countries.GNQ' => 'string',
            'countries.ERI' => 'string',
            'countries.EST' => 'string',
            'countries.ETH' => 'string',
            'countries.FLK' => 'string',
            'countries.FRO' => 'string',
            'countries.FJI' => 'string',
            'countries.FIN' => 'string',
            'countries.FRA' => 'string',
            'countries.GUF' => 'string',
            'countries.PYF' => 'string',
            'countries.ATF' => 'string',
            'countries.GAB' => 'string',
            'countries.GMB' => 'string',
            'countries.GEO' => 'string',
            'countries.DEU' => 'string',
            'countries.GHA' => 'string',
            'countries.GIB' => 'string',
            'countries.GRC' => 'string',
            'countries.GRL' => 'string',
            'countries.GRD' => 'string',
            'countries.GLP' => 'string',
            'countries.GUM' => 'string',
            'countries.GTM' => 'string',
            'countries.GGY' => 'string',
            'countries.GIN' => 'string',
            'countries.GNB' => 'string',
            'countries.GUY' => 'string',
            'countries.HTI' => 'string',
            'countries.HMD' => 'string',
            'countries.VAT' => 'string',
            'countries.HND' => 'string',
            'countries.HKG' => 'string',
            'countries.HUN' => 'string',
            'countries.ISL' => 'string',
            'countries.IND' => 'string',
            'countries.IDN' => 'string',
            'countries.IRN' => 'string',
            'countries.IRQ' => 'string',
            'countries.IRL' => 'string',
            'countries.IMN' => 'string',
            'countries.ISR' => 'string',
            'countries.ITA' => 'string',
            'countries.JAM' => 'string',
            'countries.JPN' => 'string',
            'countries.JEY' => 'string',
            'countries.JOR' => 'string',
            'countries.KAZ' => 'string',
            'countries.KEN' => 'string',
            'countries.KIR' => 'string',
            'countries.PRK' => 'string',
            'countries.KOR' => 'string',
            'countries.KWT' => 'string',
            'countries.KGZ' => 'string',
            'countries.LAO' => 'string',
            'countries.LVA' => 'string',
            'countries.LBN' => 'string',
            'countries.LSO' => 'string',
            'countries.LBR' => 'string',
            'countries.LBY' => 'string',
            'countries.LIE' => 'string',
            'countries.LTU' => 'string',
            'countries.LUX' => 'string',
            'countries.MAC' => 'string',
            'countries.MKD' => 'string',
            'countries.MDG' => 'string',
            'countries.MWI' => 'string',
            'countries.MYS' => 'string',
            'countries.MDV' => 'string',
            'countries.MLI' => 'string',
            'countries.MLT' => 'string',
            'countries.MHL' => 'string',
            'countries.MTQ' => 'string',
            'countries.MRT' => 'string',
            'countries.MUS' => 'string',
            'countries.MYT' => 'string',
            'countries.MEX' => 'string',
            'countries.FSM' => 'string',
            'countries.MDA' => 'string',
            'countries.MCO' => 'string',
            'countries.MNG' => 'string',
            'countries.MNE' => 'string',
            'countries.MSR' => 'string',
            'countries.MAR' => 'string',
            'countries.MOZ' => 'string',
            'countries.MMR' => 'string',
            'countries.NAM' => 'string',
            'countries.NRU' => 'string',
            'countries.NPL' => 'string',
            'countries.NLD' => 'string',
            'countries.NCL' => 'string',
            'countries.NZL' => 'string',
            'countries.NIC' => 'string',
            'countries.NER' => 'string',
            'countries.NGA' => 'string',
            'countries.NIU' => 'string',
            'countries.NFK' => 'string',
            'countries.MNP' => 'string',
            'countries.NOR' => 'string',
            'countries.OMN' => 'string',
            'countries.PAK' => 'string',
            'countries.PLW' => 'string',
            'countries.PSE' => 'string',
            'countries.PAN' => 'string',
            'countries.PNG' => 'string',
            'countries.PRY' => 'string',
            'countries.PER' => 'string',
            'countries.PHL' => 'string',
            'countries.PCN' => 'string',
            'countries.POL' => 'string',
            'countries.PRT' => 'string',
            'countries.PRI' => 'string',
            'countries.QAT' => 'string',
            'countries.REU' => 'string',
            'countries.ROU' => 'string',
            'countries.RUS' => 'string',
            'countries.RWA' => 'string',
            'countries.BLM' => 'string',
            'countries.SHN' => 'string',
            'countries.KNA' => 'string',
            'countries.LCA' => 'string',
            'countries.MAF' => 'string',
            'countries.SPM' => 'string',
            'countries.VCT' => 'string',
            'countries.WSM' => 'string',
            'countries.SMR' => 'string',
            'countries.STP' => 'string',
            'countries.SAU' => 'string',
            'countries.SEN' => 'string',
            'countries.SRB' => 'string',
            'countries.SYC' => 'string',
            'countries.SLE' => 'string',
            'countries.SGP' => 'string',
            'countries.SXM' => 'string',
            'countries.SVK' => 'string',
            'countries.SVN' => 'string',
            'countries.SLB' => 'string',
            'countries.SOM' => 'string',
            'countries.ZAF' => 'string',
            'countries.SGS' => 'string',
            'countries.SSD' => 'string',
            'countries.ESP' => 'string',
            'countries.LKA' => 'string',
            'countries.SDN' => 'string',
            'countries.SUR' => 'string',
            'countries.SJM' => 'string',
            'countries.SWZ' => 'string',
            'countries.SWE' => 'string',
            'countries.CHE' => 'string',
            'countries.SYR' => 'string',
            'countries.TWN' => 'string',
            'countries.TJK' => 'string',
            'countries.TZA' => 'string',
            'countries.THA' => 'string',
            'countries.TLS' => 'string',
            'countries.TGO' => 'string',
            'countries.TKL' => 'string',
            'countries.TON' => 'string',
            'countries.TTO' => 'string',
            'countries.TUN' => 'string',
            'countries.TUR' => 'string',
            'countries.TKM' => 'string',
            'countries.TCA' => 'string',
            'countries.TUV' => 'string',
            'countries.UGA' => 'string',
            'countries.UKR' => 'string',
            'countries.ARE' => 'string',
            'countries.GBR' => 'string',
            'countries.USA' => 'string',
            'countries.UMI' => 'string',
            'countries.URY' => 'string',
            'countries.UZB' => 'string',
            'countries.VUT' => 'string',
            'countries.VEN' => 'string',
            'countries.VNM' => 'string',
            'countries.VGB' => 'string',
            'countries.VIR' => 'string',
            'countries.WLF' => 'string',
            'countries.ESH' => 'string',
            'countries.YEM' => 'string',
            'countries.ZMB' => 'string',
            'countries.ZWE' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'elasticsearch.host' => 'string',
            'elasticsearch.user' => 'NULL',
            'elasticsearch.password' => 'NULL',
            'elasticsearch.cloud_id' => 'NULL',
            'elasticsearch.api_key' => 'NULL',
            'elasticsearch.ssl_verification' => 'boolean',
            'elasticsearch.queue.timeout' => 'NULL',
            'elasticsearch.indices.mappings.default.properties.id.type' => 'string',
            'elasticsearch.indices.settings.default.number_of_shards' => 'integer',
            'elasticsearch.indices.settings.default.number_of_replicas' => 'integer',
            'experience.multipliers.product_delivered' => 'integer',
            'experience.multipliers.product_dispute_lost' => 'integer',
            'experience.multipliers.feedback_per_star' => 'integer',
            'experience.multipliers.feedback_per_usd' => 'integer',
            'featuredproducts.name' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links./home/erion/goErion/public/storage' => 'string',
            'finalizeearly.name' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.deprecations.driver' => 'string',
            'logging.channels.deprecations.handler' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'markdown.views' => 'boolean',
            'markdown.extensions' => 'array',
            'markdown.renderer.block_separator' => 'string',
            'markdown.renderer.inner_separator' => 'string',
            'markdown.renderer.soft_break' => 'string',
            'markdown.commonmark.enable_em' => 'boolean',
            'markdown.commonmark.enable_strong' => 'boolean',
            'markdown.commonmark.use_asterisk' => 'boolean',
            'markdown.commonmark.use_underscore' => 'boolean',
            'markdown.commonmark.unordered_list_markers' => 'array',
            'markdown.html_input' => 'string',
            'markdown.allow_unsafe_links' => 'boolean',
            'markdown.max_nesting_level' => 'integer',
            'markdown.slug_normalizer.max_length' => 'integer',
            'markdown.slug_normalizer.unique' => 'string',
            'marketplace.rsa_key_length' => 'integer',
            'marketplace.mnemonic_length' => 'integer',
            'marketplace.product_types' => 'array',
            'marketplace.market_fee_percent' => 'integer',
            'marketplace.vendor_fee' => 'integer',
            'marketplace.vendor_dwc_tag_count' => 'integer',
            'marketplace.vendor_low_value_feedback' => 'integer',
            'marketplace.trusted_vendor.min_lvl' => 'integer',
            'marketplace.trusted_vendor.min_feedbacks' => 'integer',
            'marketplace.trusted_vendor.percentage_of_feedback_positive' => 'integer',
            'marketplace.products_per_page' => 'integer',
            'marketplace.days_complete' => 'integer',
            'marketplace.days_old_messages' => 'integer',
            'marketplace.days_old_purchases' => 'integer',
            'marketplace.seeder_coins' => 'array',
            'marketplace.js_warning' => 'boolean',
            'marketplace.mirrors' => 'array',
            'marketplace.front_page_cache.top_vendors' => 'integer',
            'marketplace.front_page_cache.latest_orders' => 'integer',
            'marketplace.front_page_cache.rising_vendors' => 'integer',
            'marketplace.front_page_cache.featured_products' => 'integer',
            'modules.namespace' => 'string',
            'modules.stubs.enabled' => 'boolean',
            'modules.stubs.path' => 'string',
            'modules.stubs.files.Routes/web' => 'string',
            'modules.stubs.files.Routes/api' => 'string',
            'modules.stubs.files.views/index' => 'string',
            'modules.stubs.files.views/master' => 'string',
            'modules.stubs.files.scaffold/config' => 'string',
            'modules.stubs.files.composer' => 'string',
            'modules.stubs.files.assets/js/app' => 'string',
            'modules.stubs.files.assets/sass/app' => 'string',
            'modules.stubs.files.vite' => 'string',
            'modules.stubs.files.package' => 'string',
            'modules.stubs.replacements.Routes/web' => 'array',
            'modules.stubs.replacements.Routes/api' => 'array',
            'modules.stubs.replacements.vite' => 'array',
            'modules.stubs.replacements.json' => 'array',
            'modules.stubs.replacements.views/index' => 'array',
            'modules.stubs.replacements.views/master' => 'array',
            'modules.stubs.replacements.scaffold/config' => 'array',
            'modules.stubs.replacements.composer' => 'array',
            'modules.stubs.gitkeep' => 'boolean',
            'modules.paths.modules' => 'string',
            'modules.paths.assets' => 'string',
            'modules.paths.migration' => 'string',
            'modules.paths.app_folder' => 'string',
            'modules.paths.generator.actions.path' => 'string',
            'modules.paths.generator.actions.generate' => 'boolean',
            'modules.paths.generator.casts.path' => 'string',
            'modules.paths.generator.casts.generate' => 'boolean',
            'modules.paths.generator.channels.path' => 'string',
            'modules.paths.generator.channels.generate' => 'boolean',
            'modules.paths.generator.class.path' => 'string',
            'modules.paths.generator.class.generate' => 'boolean',
            'modules.paths.generator.command.path' => 'string',
            'modules.paths.generator.command.generate' => 'boolean',
            'modules.paths.generator.component-class.path' => 'string',
            'modules.paths.generator.component-class.generate' => 'boolean',
            'modules.paths.generator.emails.path' => 'string',
            'modules.paths.generator.emails.generate' => 'boolean',
            'modules.paths.generator.event.path' => 'string',
            'modules.paths.generator.event.generate' => 'boolean',
            'modules.paths.generator.enums.path' => 'string',
            'modules.paths.generator.enums.generate' => 'boolean',
            'modules.paths.generator.exceptions.path' => 'string',
            'modules.paths.generator.exceptions.generate' => 'boolean',
            'modules.paths.generator.jobs.path' => 'string',
            'modules.paths.generator.jobs.generate' => 'boolean',
            'modules.paths.generator.helpers.path' => 'string',
            'modules.paths.generator.helpers.generate' => 'boolean',
            'modules.paths.generator.interfaces.path' => 'string',
            'modules.paths.generator.interfaces.generate' => 'boolean',
            'modules.paths.generator.listener.path' => 'string',
            'modules.paths.generator.listener.generate' => 'boolean',
            'modules.paths.generator.model.path' => 'string',
            'modules.paths.generator.model.generate' => 'boolean',
            'modules.paths.generator.notifications.path' => 'string',
            'modules.paths.generator.notifications.generate' => 'boolean',
            'modules.paths.generator.observer.path' => 'string',
            'modules.paths.generator.observer.generate' => 'boolean',
            'modules.paths.generator.policies.path' => 'string',
            'modules.paths.generator.policies.generate' => 'boolean',
            'modules.paths.generator.provider.path' => 'string',
            'modules.paths.generator.provider.generate' => 'boolean',
            'modules.paths.generator.repository.path' => 'string',
            'modules.paths.generator.repository.generate' => 'boolean',
            'modules.paths.generator.resource.path' => 'string',
            'modules.paths.generator.resource.generate' => 'boolean',
            'modules.paths.generator.route-provider.path' => 'string',
            'modules.paths.generator.route-provider.generate' => 'boolean',
            'modules.paths.generator.rules.path' => 'string',
            'modules.paths.generator.rules.generate' => 'boolean',
            'modules.paths.generator.services.path' => 'string',
            'modules.paths.generator.services.generate' => 'boolean',
            'modules.paths.generator.scopes.path' => 'string',
            'modules.paths.generator.scopes.generate' => 'boolean',
            'modules.paths.generator.traits.path' => 'string',
            'modules.paths.generator.traits.generate' => 'boolean',
            'modules.paths.generator.controller.path' => 'string',
            'modules.paths.generator.controller.generate' => 'boolean',
            'modules.paths.generator.filter.path' => 'string',
            'modules.paths.generator.filter.generate' => 'boolean',
            'modules.paths.generator.request.path' => 'string',
            'modules.paths.generator.request.generate' => 'boolean',
            'modules.paths.generator.config.path' => 'string',
            'modules.paths.generator.config.generate' => 'boolean',
            'modules.paths.generator.factory.path' => 'string',
            'modules.paths.generator.factory.generate' => 'boolean',
            'modules.paths.generator.migration.path' => 'string',
            'modules.paths.generator.migration.generate' => 'boolean',
            'modules.paths.generator.seeder.path' => 'string',
            'modules.paths.generator.seeder.generate' => 'boolean',
            'modules.paths.generator.lang.path' => 'string',
            'modules.paths.generator.lang.generate' => 'boolean',
            'modules.paths.generator.assets.path' => 'string',
            'modules.paths.generator.assets.generate' => 'boolean',
            'modules.paths.generator.component-view.path' => 'string',
            'modules.paths.generator.component-view.generate' => 'boolean',
            'modules.paths.generator.views.path' => 'string',
            'modules.paths.generator.views.generate' => 'boolean',
            'modules.paths.generator.Routes.path' => 'string',
            'modules.paths.generator.Routes.generate' => 'boolean',
            'modules.paths.generator.test-feature.path' => 'string',
            'modules.paths.generator.test-feature.generate' => 'boolean',
            'modules.paths.generator.test-unit.path' => 'string',
            'modules.paths.generator.test-unit.generate' => 'boolean',
            'modules.auto-discover.Migrations' => 'boolean',
            'modules.auto-discover.translations' => 'boolean',
            'modules.commands' => 'array',
            'modules.scan.enabled' => 'boolean',
            'modules.scan.paths' => 'array',
            'modules.composer.vendor' => 'string',
            'modules.composer.author.name' => 'string',
            'modules.composer.author.email' => 'string',
            'modules.composer.composer-output' => 'boolean',
            'modules.register.translations' => 'boolean',
            'modules.register.files' => 'string',
            'modules.activators.file.class' => 'string',
            'modules.activators.file.statuses-file' => 'string',
            'modules.activator' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.algolia.index-settings' => 'array',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'NULL',
            'scout.meilisearch.index-settings' => 'array',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'scout.elasticsearch.index' => 'string',
            'scout.elasticsearch.hosts' => 'array',
            'scout.elasticsearch.algolia.id' => 'string',
            'scout.elasticsearch.algolia.secret' => 'string',
            'scout.elasticsearch.meilisearch.host' => 'string',
            'scout.elasticsearch.meilisearch.key' => 'NULL',
            'scout.elasticsearch.typesense.client-settings.api_key' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.host' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.port' => 'string',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'vendor.profile_bgs.weave' => 'string',
            'vendor.profile_bgs.stairs' => 'string',
            'vendor.profile_bgs.arrows' => 'string',
            'vendor.profile_bgs.zigzag' => 'string',
            'vendor.profile_bgs.carbon' => 'string',
            'vendor.profile_bgs.cross' => 'string',
            'vendor.profile_bgs.paper' => 'string',
            'vendor.profile_bgs.waves' => 'string',
            'vendor.profile_bgs.tablecloth' => 'string',
            'vendor.profile_bgs.seigaiha' => 'string',
            'vendor.profile_bgs.jcubes' => 'string',
            'vendor.profile_bgs.bricks' => 'string',
            'vendor.profile_bgs.checkerboard' => 'string',
            'vendor.profile_bgs.starrynight' => 'string',
            'vendor.profile_bgs.stars' => 'string',
            'vendor.profile_bgs.wave' => 'string',
            'vendor.profile_bgs.blueprint' => 'string',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Support\Facades\Config::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.config' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Redis' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Uuid' => 'string',
            'app.aliases.Module' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.password' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'auth.forgotpassword.users.provider' => 'string',
            'auth.forgotpassword.users.table' => 'string',
            'auth.forgotpassword.users.expire' => 'integer',
            'auth.forgotpassword.users.throttle' => 'integer',
            'bitmessage.enabled' => 'boolean',
            'bitmessage.connection.host' => 'string',
            'bitmessage.connection.port' => 'integer',
            'bitmessage.connection.username' => 'string',
            'bitmessage.connection.password' => 'string',
            'bitmessage.marketplace_address' => 'string',
            'bitmessage.confirmation_valid_time' => 'integer',
            'bitmessage.confirmation_msg_frequency' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.Database.driver' => 'string',
            'cache.stores.Database.connection' => 'NULL',
            'cache.stores.Database.table' => 'string',
            'cache.stores.Database.lock_connection' => 'NULL',
            'cache.stores.Database.lock_table' => 'NULL',
            'cache.prefix' => 'string',
            'coins.coin_list.stb' => 'string',
            'coins.bitcoin.host' => 'string',
            'coins.bitcoin.username' => 'string',
            'coins.bitcoin.password' => 'string',
            'coins.bitcoin.port' => 'integer',
            'coins.bitcoin.minconfirmations' => 'integer',
            'coins.monero.host' => 'string',
            'coins.monero.port' => 'integer',
            'coins.monero.username' => 'string',
            'coins.monero.password' => 'string',
            'coins.pivx.host' => 'string',
            'coins.pivx.port' => 'integer',
            'coins.pivx.username' => 'string',
            'coins.pivx.password' => 'string',
            'coins.litecoin.host' => 'string',
            'coins.litecoin.port' => 'integer',
            'coins.litecoin.username' => 'string',
            'coins.litecoin.password' => 'string',
            'coins.dash.host' => 'string',
            'coins.dash.port' => 'integer',
            'coins.dash.username' => 'string',
            'coins.dash.password' => 'string',
            'coins.bictoin_cash.host' => 'string',
            'coins.bictoin_cash.port' => 'integer',
            'coins.bictoin_cash.username' => 'string',
            'coins.bictoin_cash.password' => 'string',
            'coins.xvg.host' => 'string',
            'coins.xvg.port' => 'integer',
            'coins.xvg.username' => 'string',
            'coins.xvg.password' => 'string',
            'coins.caching_price_interval' => 'integer',
            'coins.market_addresses.btc' => 'array',
            'coins.market_addresses.pivx' => 'array',
            'coins.market_addresses.dash' => 'array',
            'coins.market_addresses.xmr' => 'array',
            'coins.market_addresses.stb' => 'array',
            'coins.multisig.balance_api' => 'string',
            'coins.multisig.unspent_api' => 'string',
            'countries.AFG' => 'string',
            'countries.ALA' => 'string',
            'countries.ALB' => 'string',
            'countries.DZA' => 'string',
            'countries.ASM' => 'string',
            'countries.AND' => 'string',
            'countries.AGO' => 'string',
            'countries.AIA' => 'string',
            'countries.ATA' => 'string',
            'countries.ATG' => 'string',
            'countries.ARG' => 'string',
            'countries.ARM' => 'string',
            'countries.ABW' => 'string',
            'countries.AUS' => 'string',
            'countries.AUT' => 'string',
            'countries.AZE' => 'string',
            'countries.BHS' => 'string',
            'countries.BHR' => 'string',
            'countries.BGD' => 'string',
            'countries.BRB' => 'string',
            'countries.BLR' => 'string',
            'countries.BEL' => 'string',
            'countries.BLZ' => 'string',
            'countries.BEN' => 'string',
            'countries.BMU' => 'string',
            'countries.BTN' => 'string',
            'countries.BOL' => 'string',
            'countries.BES' => 'string',
            'countries.BIH' => 'string',
            'countries.BWA' => 'string',
            'countries.BVT' => 'string',
            'countries.BRA' => 'string',
            'countries.IOT' => 'string',
            'countries.BRN' => 'string',
            'countries.BGR' => 'string',
            'countries.BFA' => 'string',
            'countries.BDI' => 'string',
            'countries.KHM' => 'string',
            'countries.CMR' => 'string',
            'countries.CAN' => 'string',
            'countries.CPV' => 'string',
            'countries.CYM' => 'string',
            'countries.CAF' => 'string',
            'countries.TCD' => 'string',
            'countries.CHL' => 'string',
            'countries.CHN' => 'string',
            'countries.CXR' => 'string',
            'countries.CCK' => 'string',
            'countries.COL' => 'string',
            'countries.COM' => 'string',
            'countries.COG' => 'string',
            'countries.COD' => 'string',
            'countries.COK' => 'string',
            'countries.CRI' => 'string',
            'countries.CIV' => 'string',
            'countries.HRV' => 'string',
            'countries.CUB' => 'string',
            'countries.CUW' => 'string',
            'countries.CYP' => 'string',
            'countries.CZE' => 'string',
            'countries.DNK' => 'string',
            'countries.DJI' => 'string',
            'countries.DMA' => 'string',
            'countries.DOM' => 'string',
            'countries.ECU' => 'string',
            'countries.EGY' => 'string',
            'countries.SLV' => 'string',
            'countries.GNQ' => 'string',
            'countries.ERI' => 'string',
            'countries.EST' => 'string',
            'countries.ETH' => 'string',
            'countries.FLK' => 'string',
            'countries.FRO' => 'string',
            'countries.FJI' => 'string',
            'countries.FIN' => 'string',
            'countries.FRA' => 'string',
            'countries.GUF' => 'string',
            'countries.PYF' => 'string',
            'countries.ATF' => 'string',
            'countries.GAB' => 'string',
            'countries.GMB' => 'string',
            'countries.GEO' => 'string',
            'countries.DEU' => 'string',
            'countries.GHA' => 'string',
            'countries.GIB' => 'string',
            'countries.GRC' => 'string',
            'countries.GRL' => 'string',
            'countries.GRD' => 'string',
            'countries.GLP' => 'string',
            'countries.GUM' => 'string',
            'countries.GTM' => 'string',
            'countries.GGY' => 'string',
            'countries.GIN' => 'string',
            'countries.GNB' => 'string',
            'countries.GUY' => 'string',
            'countries.HTI' => 'string',
            'countries.HMD' => 'string',
            'countries.VAT' => 'string',
            'countries.HND' => 'string',
            'countries.HKG' => 'string',
            'countries.HUN' => 'string',
            'countries.ISL' => 'string',
            'countries.IND' => 'string',
            'countries.IDN' => 'string',
            'countries.IRN' => 'string',
            'countries.IRQ' => 'string',
            'countries.IRL' => 'string',
            'countries.IMN' => 'string',
            'countries.ISR' => 'string',
            'countries.ITA' => 'string',
            'countries.JAM' => 'string',
            'countries.JPN' => 'string',
            'countries.JEY' => 'string',
            'countries.JOR' => 'string',
            'countries.KAZ' => 'string',
            'countries.KEN' => 'string',
            'countries.KIR' => 'string',
            'countries.PRK' => 'string',
            'countries.KOR' => 'string',
            'countries.KWT' => 'string',
            'countries.KGZ' => 'string',
            'countries.LAO' => 'string',
            'countries.LVA' => 'string',
            'countries.LBN' => 'string',
            'countries.LSO' => 'string',
            'countries.LBR' => 'string',
            'countries.LBY' => 'string',
            'countries.LIE' => 'string',
            'countries.LTU' => 'string',
            'countries.LUX' => 'string',
            'countries.MAC' => 'string',
            'countries.MKD' => 'string',
            'countries.MDG' => 'string',
            'countries.MWI' => 'string',
            'countries.MYS' => 'string',
            'countries.MDV' => 'string',
            'countries.MLI' => 'string',
            'countries.MLT' => 'string',
            'countries.MHL' => 'string',
            'countries.MTQ' => 'string',
            'countries.MRT' => 'string',
            'countries.MUS' => 'string',
            'countries.MYT' => 'string',
            'countries.MEX' => 'string',
            'countries.FSM' => 'string',
            'countries.MDA' => 'string',
            'countries.MCO' => 'string',
            'countries.MNG' => 'string',
            'countries.MNE' => 'string',
            'countries.MSR' => 'string',
            'countries.MAR' => 'string',
            'countries.MOZ' => 'string',
            'countries.MMR' => 'string',
            'countries.NAM' => 'string',
            'countries.NRU' => 'string',
            'countries.NPL' => 'string',
            'countries.NLD' => 'string',
            'countries.NCL' => 'string',
            'countries.NZL' => 'string',
            'countries.NIC' => 'string',
            'countries.NER' => 'string',
            'countries.NGA' => 'string',
            'countries.NIU' => 'string',
            'countries.NFK' => 'string',
            'countries.MNP' => 'string',
            'countries.NOR' => 'string',
            'countries.OMN' => 'string',
            'countries.PAK' => 'string',
            'countries.PLW' => 'string',
            'countries.PSE' => 'string',
            'countries.PAN' => 'string',
            'countries.PNG' => 'string',
            'countries.PRY' => 'string',
            'countries.PER' => 'string',
            'countries.PHL' => 'string',
            'countries.PCN' => 'string',
            'countries.POL' => 'string',
            'countries.PRT' => 'string',
            'countries.PRI' => 'string',
            'countries.QAT' => 'string',
            'countries.REU' => 'string',
            'countries.ROU' => 'string',
            'countries.RUS' => 'string',
            'countries.RWA' => 'string',
            'countries.BLM' => 'string',
            'countries.SHN' => 'string',
            'countries.KNA' => 'string',
            'countries.LCA' => 'string',
            'countries.MAF' => 'string',
            'countries.SPM' => 'string',
            'countries.VCT' => 'string',
            'countries.WSM' => 'string',
            'countries.SMR' => 'string',
            'countries.STP' => 'string',
            'countries.SAU' => 'string',
            'countries.SEN' => 'string',
            'countries.SRB' => 'string',
            'countries.SYC' => 'string',
            'countries.SLE' => 'string',
            'countries.SGP' => 'string',
            'countries.SXM' => 'string',
            'countries.SVK' => 'string',
            'countries.SVN' => 'string',
            'countries.SLB' => 'string',
            'countries.SOM' => 'string',
            'countries.ZAF' => 'string',
            'countries.SGS' => 'string',
            'countries.SSD' => 'string',
            'countries.ESP' => 'string',
            'countries.LKA' => 'string',
            'countries.SDN' => 'string',
            'countries.SUR' => 'string',
            'countries.SJM' => 'string',
            'countries.SWZ' => 'string',
            'countries.SWE' => 'string',
            'countries.CHE' => 'string',
            'countries.SYR' => 'string',
            'countries.TWN' => 'string',
            'countries.TJK' => 'string',
            'countries.TZA' => 'string',
            'countries.THA' => 'string',
            'countries.TLS' => 'string',
            'countries.TGO' => 'string',
            'countries.TKL' => 'string',
            'countries.TON' => 'string',
            'countries.TTO' => 'string',
            'countries.TUN' => 'string',
            'countries.TUR' => 'string',
            'countries.TKM' => 'string',
            'countries.TCA' => 'string',
            'countries.TUV' => 'string',
            'countries.UGA' => 'string',
            'countries.UKR' => 'string',
            'countries.ARE' => 'string',
            'countries.GBR' => 'string',
            'countries.USA' => 'string',
            'countries.UMI' => 'string',
            'countries.URY' => 'string',
            'countries.UZB' => 'string',
            'countries.VUT' => 'string',
            'countries.VEN' => 'string',
            'countries.VNM' => 'string',
            'countries.VGB' => 'string',
            'countries.VIR' => 'string',
            'countries.WLF' => 'string',
            'countries.ESH' => 'string',
            'countries.YEM' => 'string',
            'countries.ZMB' => 'string',
            'countries.ZWE' => 'string',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'elasticsearch.host' => 'string',
            'elasticsearch.user' => 'NULL',
            'elasticsearch.password' => 'NULL',
            'elasticsearch.cloud_id' => 'NULL',
            'elasticsearch.api_key' => 'NULL',
            'elasticsearch.ssl_verification' => 'boolean',
            'elasticsearch.queue.timeout' => 'NULL',
            'elasticsearch.indices.mappings.default.properties.id.type' => 'string',
            'elasticsearch.indices.settings.default.number_of_shards' => 'integer',
            'elasticsearch.indices.settings.default.number_of_replicas' => 'integer',
            'experience.multipliers.product_delivered' => 'integer',
            'experience.multipliers.product_dispute_lost' => 'integer',
            'experience.multipliers.feedback_per_star' => 'integer',
            'experience.multipliers.feedback_per_usd' => 'integer',
            'featuredproducts.name' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.local.report' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.public.report' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.disks.s3.report' => 'boolean',
            'filesystems.links./home/erion/goErion/public/storage' => 'string',
            'finalizeearly.name' => 'string',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'array',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.handler_with.stream' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.processors' => 'array',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.deprecations.driver' => 'string',
            'logging.channels.deprecations.handler' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'markdown.views' => 'boolean',
            'markdown.extensions' => 'array',
            'markdown.renderer.block_separator' => 'string',
            'markdown.renderer.inner_separator' => 'string',
            'markdown.renderer.soft_break' => 'string',
            'markdown.commonmark.enable_em' => 'boolean',
            'markdown.commonmark.enable_strong' => 'boolean',
            'markdown.commonmark.use_asterisk' => 'boolean',
            'markdown.commonmark.use_underscore' => 'boolean',
            'markdown.commonmark.unordered_list_markers' => 'array',
            'markdown.html_input' => 'string',
            'markdown.allow_unsafe_links' => 'boolean',
            'markdown.max_nesting_level' => 'integer',
            'markdown.slug_normalizer.max_length' => 'integer',
            'markdown.slug_normalizer.unique' => 'string',
            'marketplace.rsa_key_length' => 'integer',
            'marketplace.mnemonic_length' => 'integer',
            'marketplace.product_types' => 'array',
            'marketplace.market_fee_percent' => 'integer',
            'marketplace.vendor_fee' => 'integer',
            'marketplace.vendor_dwc_tag_count' => 'integer',
            'marketplace.vendor_low_value_feedback' => 'integer',
            'marketplace.trusted_vendor.min_lvl' => 'integer',
            'marketplace.trusted_vendor.min_feedbacks' => 'integer',
            'marketplace.trusted_vendor.percentage_of_feedback_positive' => 'integer',
            'marketplace.products_per_page' => 'integer',
            'marketplace.days_complete' => 'integer',
            'marketplace.days_old_messages' => 'integer',
            'marketplace.days_old_purchases' => 'integer',
            'marketplace.seeder_coins' => 'array',
            'marketplace.js_warning' => 'boolean',
            'marketplace.mirrors' => 'array',
            'marketplace.front_page_cache.top_vendors' => 'integer',
            'marketplace.front_page_cache.latest_orders' => 'integer',
            'marketplace.front_page_cache.rising_vendors' => 'integer',
            'marketplace.front_page_cache.featured_products' => 'integer',
            'modules.namespace' => 'string',
            'modules.stubs.enabled' => 'boolean',
            'modules.stubs.path' => 'string',
            'modules.stubs.files.Routes/web' => 'string',
            'modules.stubs.files.Routes/api' => 'string',
            'modules.stubs.files.views/index' => 'string',
            'modules.stubs.files.views/master' => 'string',
            'modules.stubs.files.scaffold/config' => 'string',
            'modules.stubs.files.composer' => 'string',
            'modules.stubs.files.assets/js/app' => 'string',
            'modules.stubs.files.assets/sass/app' => 'string',
            'modules.stubs.files.vite' => 'string',
            'modules.stubs.files.package' => 'string',
            'modules.stubs.replacements.Routes/web' => 'array',
            'modules.stubs.replacements.Routes/api' => 'array',
            'modules.stubs.replacements.vite' => 'array',
            'modules.stubs.replacements.json' => 'array',
            'modules.stubs.replacements.views/index' => 'array',
            'modules.stubs.replacements.views/master' => 'array',
            'modules.stubs.replacements.scaffold/config' => 'array',
            'modules.stubs.replacements.composer' => 'array',
            'modules.stubs.gitkeep' => 'boolean',
            'modules.paths.modules' => 'string',
            'modules.paths.assets' => 'string',
            'modules.paths.migration' => 'string',
            'modules.paths.app_folder' => 'string',
            'modules.paths.generator.actions.path' => 'string',
            'modules.paths.generator.actions.generate' => 'boolean',
            'modules.paths.generator.casts.path' => 'string',
            'modules.paths.generator.casts.generate' => 'boolean',
            'modules.paths.generator.channels.path' => 'string',
            'modules.paths.generator.channels.generate' => 'boolean',
            'modules.paths.generator.class.path' => 'string',
            'modules.paths.generator.class.generate' => 'boolean',
            'modules.paths.generator.command.path' => 'string',
            'modules.paths.generator.command.generate' => 'boolean',
            'modules.paths.generator.component-class.path' => 'string',
            'modules.paths.generator.component-class.generate' => 'boolean',
            'modules.paths.generator.emails.path' => 'string',
            'modules.paths.generator.emails.generate' => 'boolean',
            'modules.paths.generator.event.path' => 'string',
            'modules.paths.generator.event.generate' => 'boolean',
            'modules.paths.generator.enums.path' => 'string',
            'modules.paths.generator.enums.generate' => 'boolean',
            'modules.paths.generator.exceptions.path' => 'string',
            'modules.paths.generator.exceptions.generate' => 'boolean',
            'modules.paths.generator.jobs.path' => 'string',
            'modules.paths.generator.jobs.generate' => 'boolean',
            'modules.paths.generator.helpers.path' => 'string',
            'modules.paths.generator.helpers.generate' => 'boolean',
            'modules.paths.generator.interfaces.path' => 'string',
            'modules.paths.generator.interfaces.generate' => 'boolean',
            'modules.paths.generator.listener.path' => 'string',
            'modules.paths.generator.listener.generate' => 'boolean',
            'modules.paths.generator.model.path' => 'string',
            'modules.paths.generator.model.generate' => 'boolean',
            'modules.paths.generator.notifications.path' => 'string',
            'modules.paths.generator.notifications.generate' => 'boolean',
            'modules.paths.generator.observer.path' => 'string',
            'modules.paths.generator.observer.generate' => 'boolean',
            'modules.paths.generator.policies.path' => 'string',
            'modules.paths.generator.policies.generate' => 'boolean',
            'modules.paths.generator.provider.path' => 'string',
            'modules.paths.generator.provider.generate' => 'boolean',
            'modules.paths.generator.repository.path' => 'string',
            'modules.paths.generator.repository.generate' => 'boolean',
            'modules.paths.generator.resource.path' => 'string',
            'modules.paths.generator.resource.generate' => 'boolean',
            'modules.paths.generator.route-provider.path' => 'string',
            'modules.paths.generator.route-provider.generate' => 'boolean',
            'modules.paths.generator.rules.path' => 'string',
            'modules.paths.generator.rules.generate' => 'boolean',
            'modules.paths.generator.services.path' => 'string',
            'modules.paths.generator.services.generate' => 'boolean',
            'modules.paths.generator.scopes.path' => 'string',
            'modules.paths.generator.scopes.generate' => 'boolean',
            'modules.paths.generator.traits.path' => 'string',
            'modules.paths.generator.traits.generate' => 'boolean',
            'modules.paths.generator.controller.path' => 'string',
            'modules.paths.generator.controller.generate' => 'boolean',
            'modules.paths.generator.filter.path' => 'string',
            'modules.paths.generator.filter.generate' => 'boolean',
            'modules.paths.generator.request.path' => 'string',
            'modules.paths.generator.request.generate' => 'boolean',
            'modules.paths.generator.config.path' => 'string',
            'modules.paths.generator.config.generate' => 'boolean',
            'modules.paths.generator.factory.path' => 'string',
            'modules.paths.generator.factory.generate' => 'boolean',
            'modules.paths.generator.migration.path' => 'string',
            'modules.paths.generator.migration.generate' => 'boolean',
            'modules.paths.generator.seeder.path' => 'string',
            'modules.paths.generator.seeder.generate' => 'boolean',
            'modules.paths.generator.lang.path' => 'string',
            'modules.paths.generator.lang.generate' => 'boolean',
            'modules.paths.generator.assets.path' => 'string',
            'modules.paths.generator.assets.generate' => 'boolean',
            'modules.paths.generator.component-view.path' => 'string',
            'modules.paths.generator.component-view.generate' => 'boolean',
            'modules.paths.generator.views.path' => 'string',
            'modules.paths.generator.views.generate' => 'boolean',
            'modules.paths.generator.Routes.path' => 'string',
            'modules.paths.generator.Routes.generate' => 'boolean',
            'modules.paths.generator.test-feature.path' => 'string',
            'modules.paths.generator.test-feature.generate' => 'boolean',
            'modules.paths.generator.test-unit.path' => 'string',
            'modules.paths.generator.test-unit.generate' => 'boolean',
            'modules.auto-discover.Migrations' => 'boolean',
            'modules.auto-discover.translations' => 'boolean',
            'modules.commands' => 'array',
            'modules.scan.enabled' => 'boolean',
            'modules.scan.paths' => 'array',
            'modules.composer.vendor' => 'string',
            'modules.composer.author.name' => 'string',
            'modules.composer.author.email' => 'string',
            'modules.composer.composer-output' => 'boolean',
            'modules.register.translations' => 'boolean',
            'modules.register.files' => 'string',
            'modules.activators.file.class' => 'string',
            'modules.activators.file.statuses-file' => 'string',
            'modules.activator' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.algolia.index-settings' => 'array',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'NULL',
            'scout.meilisearch.index-settings' => 'array',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'scout.elasticsearch.index' => 'string',
            'scout.elasticsearch.hosts' => 'array',
            'scout.elasticsearch.algolia.id' => 'string',
            'scout.elasticsearch.algolia.secret' => 'string',
            'scout.elasticsearch.meilisearch.host' => 'string',
            'scout.elasticsearch.meilisearch.key' => 'NULL',
            'scout.elasticsearch.typesense.client-settings.api_key' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.host' => 'string',
            'scout.elasticsearch.typesense.client-settings.nodes.0.port' => 'string',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'integer',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'vendor.profile_bgs.weave' => 'string',
            'vendor.profile_bgs.stairs' => 'string',
            'vendor.profile_bgs.arrows' => 'string',
            'vendor.profile_bgs.zigzag' => 'string',
            'vendor.profile_bgs.carbon' => 'string',
            'vendor.profile_bgs.cross' => 'string',
            'vendor.profile_bgs.paper' => 'string',
            'vendor.profile_bgs.waves' => 'string',
            'vendor.profile_bgs.tablecloth' => 'string',
            'vendor.profile_bgs.seigaiha' => 'string',
            'vendor.profile_bgs.jcubes' => 'string',
            'vendor.profile_bgs.bricks' => 'string',
            'vendor.profile_bgs.checkerboard' => 'string',
            'vendor.profile_bgs.starrynight' => 'string',
            'vendor.profile_bgs.stars' => 'string',
            'vendor.profile_bgs.wave' => 'string',
            'vendor.profile_bgs.blueprint' => 'string',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.bcrypt.limit' => 'NULL',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));


    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::mock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::partialMock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::instance(0), type(1));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::spy(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

            registerArgumentsSet('auth', 
'has-access',);
        registerArgumentsSet('configs', 
'app.name','app.env','app.debug','app.url','app.frontend_url',
'app.asset_url','app.timezone','app.locale','app.fallback_locale','app.faker_locale',
'app.cipher','app.key','app.previous_keys','app.maintenance.driver','app.maintenance.store',
'app.providers','app.aliases.App','app.aliases.Artisan','app.aliases.Auth','app.aliases.Blade',
'app.aliases.Broadcast','app.aliases.Bus','app.aliases.Cache','app.aliases.config','app.aliases.Cookie',
'app.aliases.Crypt','app.aliases.DB','app.aliases.Eloquent','app.aliases.Event','app.aliases.File',
'app.aliases.Gate','app.aliases.Hash','app.aliases.Lang','app.aliases.Log','app.aliases.Mail',
'app.aliases.Notification','app.aliases.Password','app.aliases.Queue','app.aliases.Redirect','app.aliases.Redis',
'app.aliases.Request','app.aliases.Response','app.aliases.Route','app.aliases.Schema','app.aliases.Session',
'app.aliases.Storage','app.aliases.URL','app.aliases.Validator','app.aliases.View','app.aliases.Uuid',
'app.aliases.Module','auth.defaults.guard','auth.defaults.password','auth.guards.web.driver','auth.guards.web.provider',
'auth.guards.api.driver','auth.guards.api.provider','auth.providers.users.driver','auth.providers.users.model','auth.passwords.users.provider',
'auth.passwords.users.table','auth.passwords.users.expire','auth.passwords.users.throttle','auth.password_timeout','auth.forgotpassword.users.provider',
'auth.forgotpassword.users.table','auth.forgotpassword.users.expire','auth.forgotpassword.users.throttle','bitmessage.enabled','bitmessage.connection.host',
'bitmessage.connection.port','bitmessage.connection.username','bitmessage.connection.password','bitmessage.marketplace_address','bitmessage.confirmation_valid_time',
'bitmessage.confirmation_msg_frequency','cache.default','cache.stores.array.driver','cache.stores.array.serialize','cache.stores.database.driver',
'cache.stores.database.connection','cache.stores.database.table','cache.stores.database.lock_connection','cache.stores.database.lock_table','cache.stores.file.driver',
'cache.stores.file.path','cache.stores.file.lock_path','cache.stores.memcached.driver','cache.stores.memcached.persistent_id','cache.stores.memcached.sasl',
'cache.stores.memcached.options','cache.stores.memcached.servers.0.host','cache.stores.memcached.servers.0.port','cache.stores.memcached.servers.0.weight','cache.stores.redis.driver',
'cache.stores.redis.connection','cache.stores.redis.lock_connection','cache.stores.dynamodb.driver','cache.stores.dynamodb.key','cache.stores.dynamodb.secret',
'cache.stores.dynamodb.region','cache.stores.dynamodb.table','cache.stores.dynamodb.endpoint','cache.stores.octane.driver','cache.stores.Database.driver',
'cache.stores.Database.connection','cache.stores.Database.table','cache.stores.Database.lock_connection','cache.stores.Database.lock_table','cache.prefix',
'coins.coin_list.stb','coins.bitcoin.host','coins.bitcoin.username','coins.bitcoin.password','coins.bitcoin.port',
'coins.bitcoin.minconfirmations','coins.monero.host','coins.monero.port','coins.monero.username','coins.monero.password',
'coins.pivx.host','coins.pivx.port','coins.pivx.username','coins.pivx.password','coins.litecoin.host',
'coins.litecoin.port','coins.litecoin.username','coins.litecoin.password','coins.dash.host','coins.dash.port',
'coins.dash.username','coins.dash.password','coins.bictoin_cash.host','coins.bictoin_cash.port','coins.bictoin_cash.username',
'coins.bictoin_cash.password','coins.xvg.host','coins.xvg.port','coins.xvg.username','coins.xvg.password',
'coins.caching_price_interval','coins.market_addresses.btc','coins.market_addresses.pivx','coins.market_addresses.dash','coins.market_addresses.xmr',
'coins.market_addresses.stb','coins.multisig.balance_api','coins.multisig.unspent_api','countries.AFG','countries.ALA',
'countries.ALB','countries.DZA','countries.ASM','countries.AND','countries.AGO',
'countries.AIA','countries.ATA','countries.ATG','countries.ARG','countries.ARM',
'countries.ABW','countries.AUS','countries.AUT','countries.AZE','countries.BHS',
'countries.BHR','countries.BGD','countries.BRB','countries.BLR','countries.BEL',
'countries.BLZ','countries.BEN','countries.BMU','countries.BTN','countries.BOL',
'countries.BES','countries.BIH','countries.BWA','countries.BVT','countries.BRA',
'countries.IOT','countries.BRN','countries.BGR','countries.BFA','countries.BDI',
'countries.KHM','countries.CMR','countries.CAN','countries.CPV','countries.CYM',
'countries.CAF','countries.TCD','countries.CHL','countries.CHN','countries.CXR',
'countries.CCK','countries.COL','countries.COM','countries.COG','countries.COD',
'countries.COK','countries.CRI','countries.CIV','countries.HRV','countries.CUB',
'countries.CUW','countries.CYP','countries.CZE','countries.DNK','countries.DJI',
'countries.DMA','countries.DOM','countries.ECU','countries.EGY','countries.SLV',
'countries.GNQ','countries.ERI','countries.EST','countries.ETH','countries.FLK',
'countries.FRO','countries.FJI','countries.FIN','countries.FRA','countries.GUF',
'countries.PYF','countries.ATF','countries.GAB','countries.GMB','countries.GEO',
'countries.DEU','countries.GHA','countries.GIB','countries.GRC','countries.GRL',
'countries.GRD','countries.GLP','countries.GUM','countries.GTM','countries.GGY',
'countries.GIN','countries.GNB','countries.GUY','countries.HTI','countries.HMD',
'countries.VAT','countries.HND','countries.HKG','countries.HUN','countries.ISL',
'countries.IND','countries.IDN','countries.IRN','countries.IRQ','countries.IRL',
'countries.IMN','countries.ISR','countries.ITA','countries.JAM','countries.JPN',
'countries.JEY','countries.JOR','countries.KAZ','countries.KEN','countries.KIR',
'countries.PRK','countries.KOR','countries.KWT','countries.KGZ','countries.LAO',
'countries.LVA','countries.LBN','countries.LSO','countries.LBR','countries.LBY',
'countries.LIE','countries.LTU','countries.LUX','countries.MAC','countries.MKD',
'countries.MDG','countries.MWI','countries.MYS','countries.MDV','countries.MLI',
'countries.MLT','countries.MHL','countries.MTQ','countries.MRT','countries.MUS',
'countries.MYT','countries.MEX','countries.FSM','countries.MDA','countries.MCO',
'countries.MNG','countries.MNE','countries.MSR','countries.MAR','countries.MOZ',
'countries.MMR','countries.NAM','countries.NRU','countries.NPL','countries.NLD',
'countries.NCL','countries.NZL','countries.NIC','countries.NER','countries.NGA',
'countries.NIU','countries.NFK','countries.MNP','countries.NOR','countries.OMN',
'countries.PAK','countries.PLW','countries.PSE','countries.PAN','countries.PNG',
'countries.PRY','countries.PER','countries.PHL','countries.PCN','countries.POL',
'countries.PRT','countries.PRI','countries.QAT','countries.REU','countries.ROU',
'countries.RUS','countries.RWA','countries.BLM','countries.SHN','countries.KNA',
'countries.LCA','countries.MAF','countries.SPM','countries.VCT','countries.WSM',
'countries.SMR','countries.STP','countries.SAU','countries.SEN','countries.SRB',
'countries.SYC','countries.SLE','countries.SGP','countries.SXM','countries.SVK',
'countries.SVN','countries.SLB','countries.SOM','countries.ZAF','countries.SGS',
'countries.SSD','countries.ESP','countries.LKA','countries.SDN','countries.SUR',
'countries.SJM','countries.SWZ','countries.SWE','countries.CHE','countries.SYR',
'countries.TWN','countries.TJK','countries.TZA','countries.THA','countries.TLS',
'countries.TGO','countries.TKL','countries.TON','countries.TTO','countries.TUN',
'countries.TUR','countries.TKM','countries.TCA','countries.TUV','countries.UGA',
'countries.UKR','countries.ARE','countries.GBR','countries.USA','countries.UMI',
'countries.URY','countries.UZB','countries.VUT','countries.VEN','countries.VNM',
'countries.VGB','countries.VIR','countries.WLF','countries.ESH','countries.YEM',
'countries.ZMB','countries.ZWE','database.default','database.connections.sqlite.driver','database.connections.sqlite.url',
'database.connections.sqlite.database','database.connections.sqlite.prefix','database.connections.sqlite.foreign_key_constraints','database.connections.sqlite.busy_timeout','database.connections.sqlite.journal_mode',
'database.connections.sqlite.synchronous','database.connections.mysql.driver','database.connections.mysql.url','database.connections.mysql.host','database.connections.mysql.port',
'database.connections.mysql.database','database.connections.mysql.username','database.connections.mysql.password','database.connections.mysql.unix_socket','database.connections.mysql.charset',
'database.connections.mysql.collation','database.connections.mysql.prefix','database.connections.mysql.prefix_indexes','database.connections.mysql.strict','database.connections.mysql.engine',
'database.connections.mysql.options','database.connections.mariadb.driver','database.connections.mariadb.url','database.connections.mariadb.host','database.connections.mariadb.port',
'database.connections.mariadb.database','database.connections.mariadb.username','database.connections.mariadb.password','database.connections.mariadb.unix_socket','database.connections.mariadb.charset',
'database.connections.mariadb.collation','database.connections.mariadb.prefix','database.connections.mariadb.prefix_indexes','database.connections.mariadb.strict','database.connections.mariadb.engine',
'database.connections.mariadb.options','database.connections.pgsql.driver','database.connections.pgsql.url','database.connections.pgsql.host','database.connections.pgsql.port',
'database.connections.pgsql.database','database.connections.pgsql.username','database.connections.pgsql.password','database.connections.pgsql.charset','database.connections.pgsql.prefix',
'database.connections.pgsql.prefix_indexes','database.connections.pgsql.search_path','database.connections.pgsql.sslmode','database.connections.sqlsrv.driver','database.connections.sqlsrv.url',
'database.connections.sqlsrv.host','database.connections.sqlsrv.port','database.connections.sqlsrv.database','database.connections.sqlsrv.username','database.connections.sqlsrv.password',
'database.connections.sqlsrv.charset','database.connections.sqlsrv.prefix','database.connections.sqlsrv.prefix_indexes','database.migrations.table','database.migrations.update_date_on_publish',
'database.redis.client','database.redis.options.cluster','database.redis.options.prefix','database.redis.options.persistent','database.redis.default.url',
'database.redis.default.host','database.redis.default.username','database.redis.default.password','database.redis.default.port','database.redis.default.database',
'database.redis.cache.url','database.redis.cache.host','database.redis.cache.username','database.redis.cache.password','database.redis.cache.port',
'database.redis.cache.database','elasticsearch.host','elasticsearch.user','elasticsearch.password','elasticsearch.cloud_id',
'elasticsearch.api_key','elasticsearch.ssl_verification','elasticsearch.queue.timeout','elasticsearch.indices.mappings.default.properties.id.type','elasticsearch.indices.settings.default.number_of_shards',
'elasticsearch.indices.settings.default.number_of_replicas','experience.multipliers.product_delivered','experience.multipliers.product_dispute_lost','experience.multipliers.feedback_per_star','experience.multipliers.feedback_per_usd',
'featuredproducts.name','filesystems.default','filesystems.disks.local.driver','filesystems.disks.local.root','filesystems.disks.local.serve',
'filesystems.disks.local.throw','filesystems.disks.local.report','filesystems.disks.public.driver','filesystems.disks.public.root','filesystems.disks.public.url',
'filesystems.disks.public.visibility','filesystems.disks.public.throw','filesystems.disks.public.report','filesystems.disks.s3.driver','filesystems.disks.s3.key',
'filesystems.disks.s3.secret','filesystems.disks.s3.region','filesystems.disks.s3.bucket','filesystems.disks.s3.url','filesystems.disks.s3.endpoint',
'filesystems.disks.s3.use_path_style_endpoint','filesystems.disks.s3.throw','filesystems.disks.s3.report','filesystems.links./home/erion/goErion/public/storage','finalizeearly.name',
'ide-helper.filename','ide-helper.models_filename','ide-helper.meta_filename','ide-helper.include_fluent','ide-helper.include_factory_builders',
'ide-helper.write_model_magic_where','ide-helper.write_model_external_builder_methods','ide-helper.write_model_relation_count_properties','ide-helper.write_eloquent_model_mixins','ide-helper.include_helpers',
'ide-helper.helper_files','ide-helper.model_locations','ide-helper.ignored_models','ide-helper.model_hooks','ide-helper.extra.Eloquent',
'ide-helper.extra.Session','ide-helper.magic','ide-helper.interfaces','ide-helper.model_camel_case_properties','ide-helper.type_overrides.integer',
'ide-helper.type_overrides.boolean','ide-helper.include_class_docblocks','ide-helper.force_fqn','ide-helper.use_generics_annotations','ide-helper.additional_relation_types',
'ide-helper.additional_relation_return_types','ide-helper.enforce_nullable_relationships','ide-helper.post_migrate','ide-helper.macroable_traits','logging.default',
'logging.deprecations.channel','logging.deprecations.trace','logging.channels.stack.driver','logging.channels.stack.channels','logging.channels.stack.ignore_exceptions',
'logging.channels.single.driver','logging.channels.single.path','logging.channels.single.level','logging.channels.single.replace_placeholders','logging.channels.daily.driver',
'logging.channels.daily.path','logging.channels.daily.level','logging.channels.daily.days','logging.channels.daily.replace_placeholders','logging.channels.slack.driver',
'logging.channels.slack.url','logging.channels.slack.username','logging.channels.slack.emoji','logging.channels.slack.level','logging.channels.slack.replace_placeholders',
'logging.channels.papertrail.driver','logging.channels.papertrail.level','logging.channels.papertrail.handler','logging.channels.papertrail.handler_with.host','logging.channels.papertrail.handler_with.port',
'logging.channels.papertrail.handler_with.connectionString','logging.channels.papertrail.processors','logging.channels.stderr.driver','logging.channels.stderr.level','logging.channels.stderr.handler',
'logging.channels.stderr.handler_with.stream','logging.channels.stderr.formatter','logging.channels.stderr.processors','logging.channels.syslog.driver','logging.channels.syslog.level',
'logging.channels.syslog.facility','logging.channels.syslog.replace_placeholders','logging.channels.errorlog.driver','logging.channels.errorlog.level','logging.channels.errorlog.replace_placeholders',
'logging.channels.null.driver','logging.channels.null.handler','logging.channels.emergency.path','logging.channels.deprecations.driver','logging.channels.deprecations.handler',
'mail.default','mail.mailers.smtp.transport','mail.mailers.smtp.scheme','mail.mailers.smtp.url','mail.mailers.smtp.host',
'mail.mailers.smtp.port','mail.mailers.smtp.username','mail.mailers.smtp.password','mail.mailers.smtp.timeout','mail.mailers.smtp.local_domain',
'mail.mailers.ses.transport','mail.mailers.postmark.transport','mail.mailers.resend.transport','mail.mailers.sendmail.transport','mail.mailers.sendmail.path',
'mail.mailers.log.transport','mail.mailers.log.channel','mail.mailers.array.transport','mail.mailers.failover.transport','mail.mailers.failover.mailers',
'mail.mailers.failover.retry_after','mail.mailers.roundrobin.transport','mail.mailers.roundrobin.mailers','mail.mailers.roundrobin.retry_after','mail.from.address',
'mail.from.name','mail.markdown.theme','mail.markdown.paths','markdown.views','markdown.extensions',
'markdown.renderer.block_separator','markdown.renderer.inner_separator','markdown.renderer.soft_break','markdown.commonmark.enable_em','markdown.commonmark.enable_strong',
'markdown.commonmark.use_asterisk','markdown.commonmark.use_underscore','markdown.commonmark.unordered_list_markers','markdown.html_input','markdown.allow_unsafe_links',
'markdown.max_nesting_level','markdown.slug_normalizer.max_length','markdown.slug_normalizer.unique','marketplace.rsa_key_length','marketplace.mnemonic_length',
'marketplace.product_types','marketplace.market_fee_percent','marketplace.vendor_fee','marketplace.vendor_dwc_tag_count','marketplace.vendor_low_value_feedback',
'marketplace.trusted_vendor.min_lvl','marketplace.trusted_vendor.min_feedbacks','marketplace.trusted_vendor.percentage_of_feedback_positive','marketplace.products_per_page','marketplace.days_complete',
'marketplace.days_old_messages','marketplace.days_old_purchases','marketplace.seeder_coins','marketplace.js_warning','marketplace.mirrors',
'marketplace.front_page_cache.top_vendors','marketplace.front_page_cache.latest_orders','marketplace.front_page_cache.rising_vendors','marketplace.front_page_cache.featured_products','modules.namespace',
'modules.stubs.enabled','modules.stubs.path','modules.stubs.files.Routes/web','modules.stubs.files.Routes/api','modules.stubs.files.views/index',
'modules.stubs.files.views/master','modules.stubs.files.scaffold/config','modules.stubs.files.composer','modules.stubs.files.assets/js/app','modules.stubs.files.assets/sass/app',
'modules.stubs.files.vite','modules.stubs.files.package','modules.stubs.replacements.Routes/web','modules.stubs.replacements.Routes/api','modules.stubs.replacements.vite',
'modules.stubs.replacements.json','modules.stubs.replacements.views/index','modules.stubs.replacements.views/master','modules.stubs.replacements.scaffold/config','modules.stubs.replacements.composer',
'modules.stubs.gitkeep','modules.paths.modules','modules.paths.assets','modules.paths.migration','modules.paths.app_folder',
'modules.paths.generator.actions.path','modules.paths.generator.actions.generate','modules.paths.generator.casts.path','modules.paths.generator.casts.generate','modules.paths.generator.channels.path',
'modules.paths.generator.channels.generate','modules.paths.generator.class.path','modules.paths.generator.class.generate','modules.paths.generator.command.path','modules.paths.generator.command.generate',
'modules.paths.generator.component-class.path','modules.paths.generator.component-class.generate','modules.paths.generator.emails.path','modules.paths.generator.emails.generate','modules.paths.generator.event.path',
'modules.paths.generator.event.generate','modules.paths.generator.enums.path','modules.paths.generator.enums.generate','modules.paths.generator.exceptions.path','modules.paths.generator.exceptions.generate',
'modules.paths.generator.jobs.path','modules.paths.generator.jobs.generate','modules.paths.generator.helpers.path','modules.paths.generator.helpers.generate','modules.paths.generator.interfaces.path',
'modules.paths.generator.interfaces.generate','modules.paths.generator.listener.path','modules.paths.generator.listener.generate','modules.paths.generator.model.path','modules.paths.generator.model.generate',
'modules.paths.generator.notifications.path','modules.paths.generator.notifications.generate','modules.paths.generator.observer.path','modules.paths.generator.observer.generate','modules.paths.generator.policies.path',
'modules.paths.generator.policies.generate','modules.paths.generator.provider.path','modules.paths.generator.provider.generate','modules.paths.generator.repository.path','modules.paths.generator.repository.generate',
'modules.paths.generator.resource.path','modules.paths.generator.resource.generate','modules.paths.generator.route-provider.path','modules.paths.generator.route-provider.generate','modules.paths.generator.rules.path',
'modules.paths.generator.rules.generate','modules.paths.generator.services.path','modules.paths.generator.services.generate','modules.paths.generator.scopes.path','modules.paths.generator.scopes.generate',
'modules.paths.generator.traits.path','modules.paths.generator.traits.generate','modules.paths.generator.controller.path','modules.paths.generator.controller.generate','modules.paths.generator.filter.path',
'modules.paths.generator.filter.generate','modules.paths.generator.request.path','modules.paths.generator.request.generate','modules.paths.generator.config.path','modules.paths.generator.config.generate',
'modules.paths.generator.factory.path','modules.paths.generator.factory.generate','modules.paths.generator.migration.path','modules.paths.generator.migration.generate','modules.paths.generator.seeder.path',
'modules.paths.generator.seeder.generate','modules.paths.generator.lang.path','modules.paths.generator.lang.generate','modules.paths.generator.assets.path','modules.paths.generator.assets.generate',
'modules.paths.generator.component-view.path','modules.paths.generator.component-view.generate','modules.paths.generator.views.path','modules.paths.generator.views.generate','modules.paths.generator.Routes.path',
'modules.paths.generator.Routes.generate','modules.paths.generator.test-feature.path','modules.paths.generator.test-feature.generate','modules.paths.generator.test-unit.path','modules.paths.generator.test-unit.generate',
'modules.auto-discover.Migrations','modules.auto-discover.translations','modules.commands','modules.scan.enabled','modules.scan.paths',
'modules.composer.vendor','modules.composer.author.name','modules.composer.author.email','modules.composer.composer-output','modules.register.translations',
'modules.register.files','modules.activators.file.class','modules.activators.file.statuses-file','modules.activator','queue.default',
'queue.connections.sync.driver','queue.connections.database.driver','queue.connections.database.connection','queue.connections.database.table','queue.connections.database.queue',
'queue.connections.database.retry_after','queue.connections.database.after_commit','queue.connections.beanstalkd.driver','queue.connections.beanstalkd.host','queue.connections.beanstalkd.queue',
'queue.connections.beanstalkd.retry_after','queue.connections.beanstalkd.block_for','queue.connections.beanstalkd.after_commit','queue.connections.sqs.driver','queue.connections.sqs.key',
'queue.connections.sqs.secret','queue.connections.sqs.prefix','queue.connections.sqs.queue','queue.connections.sqs.suffix','queue.connections.sqs.region',
'queue.connections.sqs.after_commit','queue.connections.redis.driver','queue.connections.redis.connection','queue.connections.redis.queue','queue.connections.redis.retry_after',
'queue.connections.redis.block_for','queue.connections.redis.after_commit','queue.batching.database','queue.batching.table','queue.failed.driver',
'queue.failed.database','queue.failed.table','scout.driver','scout.prefix','scout.queue',
'scout.after_commit','scout.chunk.searchable','scout.chunk.unsearchable','scout.soft_delete','scout.identify',
'scout.algolia.id','scout.algolia.secret','scout.algolia.index-settings','scout.meilisearch.host','scout.meilisearch.key',
'scout.meilisearch.index-settings','scout.typesense.client-settings.api_key','scout.typesense.client-settings.nodes.0.host','scout.typesense.client-settings.nodes.0.port','scout.typesense.client-settings.nodes.0.path',
'scout.typesense.client-settings.nodes.0.protocol','scout.typesense.client-settings.nearest_node.host','scout.typesense.client-settings.nearest_node.port','scout.typesense.client-settings.nearest_node.path','scout.typesense.client-settings.nearest_node.protocol',
'scout.typesense.client-settings.connection_timeout_seconds','scout.typesense.client-settings.healthcheck_interval_seconds','scout.typesense.client-settings.num_retries','scout.typesense.client-settings.retry_interval_seconds','scout.typesense.model-settings',
'scout.elasticsearch.index','scout.elasticsearch.hosts','scout.elasticsearch.algolia.id','scout.elasticsearch.algolia.secret','scout.elasticsearch.meilisearch.host',
'scout.elasticsearch.meilisearch.key','scout.elasticsearch.typesense.client-settings.api_key','scout.elasticsearch.typesense.client-settings.nodes.0.host','scout.elasticsearch.typesense.client-settings.nodes.0.port','services.postmark.token',
'services.ses.key','services.ses.secret','services.ses.region','services.resend.key','services.slack.notifications.bot_user_oauth_token',
'services.slack.notifications.channel','session.driver','session.lifetime','session.expire_on_close','session.encrypt',
'session.files','session.connection','session.table','session.store','session.lottery',
'session.cookie','session.path','session.domain','session.secure','session.http_only',
'session.same_site','session.partitioned','vendor.profile_bgs.weave','vendor.profile_bgs.stairs','vendor.profile_bgs.arrows',
'vendor.profile_bgs.zigzag','vendor.profile_bgs.carbon','vendor.profile_bgs.cross','vendor.profile_bgs.paper','vendor.profile_bgs.waves',
'vendor.profile_bgs.tablecloth','vendor.profile_bgs.seigaiha','vendor.profile_bgs.jcubes','vendor.profile_bgs.bricks','vendor.profile_bgs.checkerboard',
'vendor.profile_bgs.starrynight','vendor.profile_bgs.stars','vendor.profile_bgs.wave','vendor.profile_bgs.blueprint','view.paths',
'view.compiled','cors.paths','cors.allowed_methods','cors.allowed_origins','cors.allowed_origins_patterns',
'cors.allowed_headers','cors.exposed_headers','cors.max_age','cors.supports_credentials','broadcasting.default',
'broadcasting.connections.reverb.driver','broadcasting.connections.reverb.key','broadcasting.connections.reverb.secret','broadcasting.connections.reverb.app_id','broadcasting.connections.reverb.options.host',
'broadcasting.connections.reverb.options.port','broadcasting.connections.reverb.options.scheme','broadcasting.connections.reverb.options.useTLS','broadcasting.connections.reverb.client_options','broadcasting.connections.pusher.driver',
'broadcasting.connections.pusher.key','broadcasting.connections.pusher.secret','broadcasting.connections.pusher.app_id','broadcasting.connections.pusher.options.cluster','broadcasting.connections.pusher.options.host',
'broadcasting.connections.pusher.options.port','broadcasting.connections.pusher.options.scheme','broadcasting.connections.pusher.options.encrypted','broadcasting.connections.pusher.options.useTLS','broadcasting.connections.pusher.client_options',
'broadcasting.connections.ably.driver','broadcasting.connections.ably.key','broadcasting.connections.log.driver','broadcasting.connections.null.driver','concurrency.default',
'hashing.driver','hashing.bcrypt.rounds','hashing.bcrypt.verify','hashing.bcrypt.limit','hashing.argon.memory',
'hashing.argon.threads','hashing.argon.time','hashing.argon.verify','hashing.rehash_on_login','tinker.commands',
'tinker.alias','tinker.dont_alias',);
        registerArgumentsSet('middleware', 
'web','api',);
        registerArgumentsSet('routes', 'theme.dark','theme.light','auth.signin',
'auth.signin.post','auth.signup','auth.signup.post','auth.mnemonic','auth.',
'auth.','auth.','auth.','auth.','auth.pgprecover',
'auth.resetpgp','auth.verify','auth.verify.post','auth.signout.post','admin.index',
'admin.categories','admin.categories.new','admin.categories.delete','admin.categories.show','admin.categories.edit',
'admin.messages.mass','admin.messages.send','admin.users','admin.users.query','admin.users.view',
'admin.user.edit.group','admin.user.edit.info','admin.user.ban','admin.ban.remove','admin.log',
'admin.products','admin.products.query','admin.product.delete','admin.product.edit','admin.purchases',
'admin.bitmessage','admin.disputes','admin.purchase','admin.tickets','admin.tickets.view',
'admin.tickets.solve','admin.vendor.purchases','admin.featuredproducts.show','admin.product.markfeatured','admin.featuredproducts.remove',
'admin.tickets.remove','profile.banned','profile.index','profile.password.change','profile.2fa.change',
'profile.wishlist.add','profile.wishlist','profile.pgp','profile.pgp.post','profile.pgp.confirm',
'profile.pgp.store','profile.pgp.old','profile.vendor.become','profile.become','profile.vendor.address',
'profile.vendor.address.remove','profile.vendor','profile.vendor.update.post','profile.vendor.product.digital','profile.vendor.product.digital.post',
'profile.vendor.product.add','profile.vendor.product.add.post','profile.vendor.product.offers','profile.vendor.product.offers.add','profile.vendor.product.offers.remove',
'profile.vendor.product.delivery','profile.vendor.product.delivery.new','profile.vendor.product.delivery.options','profile.vendor.product.delivery.remove','profile.vendor.product.images',
'profile.vendor.product.images.remove','profile.vendor.product.images.default','profile.vendor.product.images.post','profile.vendor.product.post','profile.vendor.product.remove.confirm',
'profile.vendor.product.remove','profile.vendor.product.edit','profile.sales','profile.sales.single','profile.sales.sent.confirm',
'profile.sales.sent','profile.cart','profile.cart.add','profile.cart.clear','profile.cart.remove',
'profile.cart.checkout','profile.cart.make.purchases','profile.purchases','profile.purchases.message','profile.purchases.single',
'profile.purchases.delivered.confirm','profile.purchases.delivered','profile.purchases.canceled.confirm','profile.purchases.canceled','profile.purchases.dispute',
'profile.purchases.disputes.message','profile.purchases.disputes.resolve','profile.purchases.feedback.new','profile.messages','profile.messages.conversation.new',
'profile.messages.conversations.list','profile.messages.message.new','profile.messages.send.message','profile.messages.decrypt.show','profile.messages.decrypt.post',
'profile.notifications','profile.notifications.delete','profile.bitmessage','profile.bitmessage.sendcode','profile.bitmessage.confirmcode',
'profile.tickets','profile.tickets.new','profile.tickets.message.new','profile.vendor.product.clone.show','profile.vendor.product.clone.post',
'home','category.show','login','confirmation','setview',
'product.show','product.rules','product.feedback','product.delivery','product.vendor',
'vendor.show','vendor.show.feedback','search','search.show','storage.local',);
        registerArgumentsSet('views', 
'admin.bitmessage','admin.categories','admin.category','admin.disputes','admin.featuredproducts',
'admin.index','admin.log','admin.messages','admin.product.basic','admin.product.delivery',
'admin.product.digital','admin.product.edit','admin.product.images','admin.product.offers','admin.products',
'admin.purchase','admin.purchases','admin.ticket','admin.tickets','admin.user',
'admin.users','admin.vendorpurchases','auth.forgotpassword.forgotpassword','auth.forgotpassword.mnemonicpassword','auth.forgotpassword.pgppassword',
'auth.forgotpassword.pgppasswordverify','auth.mnemonic','auth.signin','auth.signup','auth.verify',
'cart.checkout','cart.index','category','errors.403','errors.404',
'featuredproducts::featuredproductsview','featuredproducts::frontpagedisplay','featuredproducts::markasfeatured','finalizeearly::index','finalizeearly::layouts.master',
'includes.admin.listcategories','includes.admin.menu','includes.banners','includes.captcha','includes.currency',
'includes.detailedsearch','includes.flash.error','includes.flash.invalid','includes.flash.success','includes.jswarning',
'includes.main','includes.modal','includes.paginate','includes.product.card','includes.product.row',
'includes.profile.addingform','includes.profile.basicform','includes.profile.deliveryform','includes.profile.digitalform','includes.profile.imagesform',
'includes.profile.menu','includes.profile.newticket','includes.profile.offersform','includes.profile.ticket','includes.profile.vendor.addproduct',
'includes.profile.vendor.editprofile','includes.profile.vendor.experience','includes.profile.vendor.products','includes.purchases.components.delivery','includes.purchases.components.dispute',
'includes.purchases.components.feedback','includes.purchases.components.message','includes.purchases.components.offer','includes.purchases.components.payment','includes.purchases.purchase',
'includes.purchases.stars','includes.search','includes.sidebar','includes.subcategories','includes.validation',
'includes.vendor.card','includes.vendor.feedback','includes.vendor.feedback_icon','includes.vendor.products','includes.vendor.stats',
'includes.viewpicker','layouts.admin','layouts.app','layouts.confirmation','layouts.footer',
'layouts.navbar','layouts.navlink','layouts.product','layouts.productadding','layouts.profile',
'layouts.search','layouts.vendor','product.delivery','product.feedback','product.index',
'product.rules','product.vendor','profile.banned','profile.become','profile.bitmessage',
'profile.confirmpgp','profile.conversations','profile.index','profile.messagekey','profile.messages',
'profile.notifications','profile.oldpgp','profile.pgp','profile.product.confirmclone','profile.product.confirmdelete',
'profile.purchases.confirmcanceled','profile.purchases.confirmdelivered','profile.purchases.confirmsent','profile.purchases.index','profile.purchases.purchase',
'profile.purchases.viewmessage','profile.tickets','profile.vendor','profile.vendor.addbasic','profile.vendor.adddelivery',
'profile.vendor.adddigital','profile.vendor.addimages','profile.vendor.addoffers','profile.vendor.sale','profile.vendor.sales',
'profile.wishlist','results','vendor.feedback','vendor.feedback.detailed','vendor.feedback.stats',
'vendor.index','welcome','laravel-exceptions-renderer::components.card','laravel-exceptions-renderer::components.context','laravel-exceptions-renderer::components.editor',
'laravel-exceptions-renderer::components.header','laravel-exceptions-renderer::components.icons.chevron-down','laravel-exceptions-renderer::components.icons.chevron-up','laravel-exceptions-renderer::components.icons.computer-desktop','laravel-exceptions-renderer::components.icons.moon',
'laravel-exceptions-renderer::components.icons.sun','laravel-exceptions-renderer::components.layout','laravel-exceptions-renderer::components.navigation','laravel-exceptions-renderer::components.theme-switcher','laravel-exceptions-renderer::components.trace',
'laravel-exceptions-renderer::components.trace-and-editor','laravel-exceptions-renderer::show','laravel-exceptions::401','laravel-exceptions::402','laravel-exceptions::403',
'laravel-exceptions::404','laravel-exceptions::419','laravel-exceptions::429','laravel-exceptions::500','laravel-exceptions::503',
'laravel-exceptions::layout','laravel-exceptions::minimal','notifications::email','pagination::bootstrap-4','pagination::bootstrap-5',
'pagination::default','pagination::semantic-ui','pagination::simple-bootstrap-4','pagination::simple-bootstrap-5','pagination::simple-default',
'pagination::simple-tailwind','pagination::tailwind',);
        registerArgumentsSet('translations', 
'auth.failed','auth.password','auth.throttle','pagination.previous','pagination.next',
'passwords.reset','passwords.sent','passwords.throttled','passwords.token','passwords.user',
'validation.accepted','validation.accepted_if','validation.active_url','validation.after','validation.after_or_equal',
'validation.alpha','validation.alpha_dash','validation.alpha_num','validation.any_of','validation.array',
'validation.ascii','validation.before','validation.before_or_equal','validation.between.array','validation.between.file',
'validation.between.numeric','validation.between.string','validation.boolean','validation.can','validation.confirmed',
'validation.contains','validation.current_password','validation.date','validation.date_equals','validation.date_format',
'validation.decimal','validation.declined','validation.declined_if','validation.different','validation.digits',
'validation.digits_between','validation.dimensions','validation.distinct','validation.doesnt_end_with','validation.doesnt_start_with',
'validation.email','validation.ends_with','validation.enum','validation.exists','validation.extensions',
'validation.file','validation.filled','validation.gt.array','validation.gt.file','validation.gt.numeric',
'validation.gt.string','validation.gte.array','validation.gte.file','validation.gte.numeric','validation.gte.string',
'validation.hex_color','validation.image','validation.in','validation.in_array','validation.integer',
'validation.ip','validation.ipv4','validation.ipv6','validation.json','validation.list',
'validation.lowercase','validation.lt.array','validation.lt.file','validation.lt.numeric','validation.lt.string',
'validation.lte.array','validation.lte.file','validation.lte.numeric','validation.lte.string','validation.mac_address',
'validation.max.array','validation.max.file','validation.max.numeric','validation.max.string','validation.max_digits',
'validation.mimes','validation.mimetypes','validation.min.array','validation.min.file','validation.min.numeric',
'validation.min.string','validation.min_digits','validation.missing','validation.missing_if','validation.missing_unless',
'validation.missing_with','validation.missing_with_all','validation.multiple_of','validation.not_in','validation.not_regex',
'validation.numeric','validation.password.letters','validation.password.mixed','validation.password.numbers','validation.password.symbols',
'validation.password.uncompromised','validation.present','validation.present_if','validation.present_unless','validation.present_with',
'validation.present_with_all','validation.prohibited','validation.prohibited_if','validation.prohibited_if_accepted','validation.prohibited_if_declined',
'validation.prohibited_unless','validation.prohibits','validation.regex','validation.required','validation.required_array_keys',
'validation.required_if','validation.required_if_accepted','validation.required_if_declined','validation.required_unless','validation.required_with',
'validation.required_with_all','validation.required_without','validation.required_without_all','validation.same','validation.size.array',
'validation.size.file','validation.size.numeric','validation.size.string','validation.starts_with','validation.string',
'validation.timezone','validation.unique','validation.uploaded','validation.uppercase','validation.url',
'validation.ulid','validation.uuid','validation.custom.attribute-name.rule-name',);
        registerArgumentsSet('env', 
'APP_NAME','APP_ENV','APP_KEY','APP_DEBUG','APP_URL',
'APP_LOCALE','APP_FALLBACK_LOCALE','APP_FAKER_LOCALE','APP_MAINTENANCE_DRIVER','APP_MAINTENANCE_STORE',
'PHP_CLI_SERVER_WORKERS','BCRYPT_ROUNDS','LOG_CHANNEL','LOG_STACK','LOG_DEPRECATIONS_CHANNEL',
'LOG_LEVEL','DB_CONNECTION','DB_HOST','DB_PORT','DB_DATABASE',
'DB_USERNAME','DB_PASSWORD','SESSION_DRIVER','SESSION_LIFETIME','SESSION_ENCRYPT',
'SESSION_PATH','SESSION_DOMAIN','BROADCAST_CONNECTION','FILESYSTEM_DISK','QUEUE_CONNECTION',
'CACHE_STORE','MEMCACHED_HOST','REDIS_CLIENT','REDIS_HOST','REDIS_PASSWORD',
'REDIS_PORT','MAIL_MAILER','MAIL_SCHEME','MAIL_HOST','MAIL_PORT',
'MAIL_USERNAME','MAIL_PASSWORD','MAIL_FROM_ADDRESS','MAIL_FROM_NAME','AWS_ACCESS_KEY_ID',
'AWS_SECRET_ACCESS_KEY','AWS_DEFAULT_REGION','AWS_BUCKET','AWS_USE_PATH_STYLE_ENDPOINT','VITE_APP_NAME',
'SCOUT_DRIVER','ELASTICSEARCH_HOST','ELASTICSEARCH_PORT','ELASTICSEARCH_INDEX',);
        
                expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Support\Facades\Route::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cant(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Config\Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::push(), 0, argumentsSet('configs'));
                expectedArguments(\Illuminate\Support\Facades\Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Support\Facades\Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::withoutMiddleware(), 0, argumentsSet('middleware'));
                expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\Illuminate\Support\Facades\Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\view(), 0, argumentsSet('views'));
                expectedArguments(\Illuminate\Support\Facades\View::make(), 0, argumentsSet('views'));
    expectedArguments(\Illuminate\View\Factory::make(), 0, argumentsSet('views'));
                expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
                expectedArguments(\Illuminate\Contracts\Translation\Translator::get(), 0, argumentsSet('translations'));
                expectedArguments(\env(), 0, argumentsSet('env'));
                expectedArguments(\Illuminate\Support\Env::get(), 0, argumentsSet('env'));
            
}
